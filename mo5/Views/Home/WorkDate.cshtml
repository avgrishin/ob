@{
  Layout = "~/Views/Shared/_Layout.cshtml";
  ViewBag.Title = "Рабочие дни";
}
@section scripts {
  <style type="text/css">
    .icon-user-add {
      background-image: url(@Href("~/Scripts/ExtJS62/build/classic/theme-crisp/resources/images/tree/drop-add.gif")) !important;
    }

    .icon-delete {
      background-image: url(@Href("~/Content/images/delete.png")) !important;
    }

    .icon-refresh {
      background-image: url(@Href("~/Scripts/ExtJS62/build/classic/theme-crisp/resources/images/grid/refresh.png")) !important;
    }
    .icon-save
    {
      background-image: url(@Href("~/Content/images/save.gif")) !important;
    }
    .we-row .x-grid-cell {
      color: red;
    }
  </style>
  <link rel="stylesheet" type="text/css" href="~/Scripts/ExtJS62/build/classic/theme-crisp/resources/theme-crisp-all.css" />
  <script type="text/javascript" src="~/Scripts/ExtJS62/ext-bootstrap.js"></script>
  <script type="text/javascript" src="~/Scripts/ExtJS62/build/classic/locale/locale-ru.js"></script>
  <script type="text/javascript">

    var store = Ext.create('Ext.data.Store', {
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'd',
      fields: [{ name: 'd', type: 'date', dateFormat: 'c' }, 'w'],
      proxy: {
        actionMethods: { read: 'POST' },
        type: 'ajax',
        api: {
          update: '@Url.Action("updWorkDate")',
          read: '@Url.Action("getWorkDatesList")'
        },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true,
        listeners: {
          exception: function (proxy, response, operation) {
            alert(operation.getError());
          }
        }
      }
    });

    var storeAn = Ext.create('Ext.data.Store', {
      fields: ['value'],
      data: [{ value: (new Date()).getFullYear() - 2 }, { value: (new Date()).getFullYear() - 1 }, { value: (new Date()).getFullYear() }, { value: (new Date()).getFullYear() + 1 }]
    });

    Ext.define('WD.Grid', {
      extend: 'Ext.grid.Panel',
      alias: 'widget.wdgrid',
      initComponent: function () {
        Ext.apply(this, {
          height: 700,
          title: '@ViewBag.Title',
          store: store,
          columnLines: true,
          columns: [{
            header: 'Дата',
            dataIndex: 'd',
            xtype: 'datecolumn',
            format: 'd.m.Y D',
            width: 120
          }, {
            header: 'Рабочий день',
            dataIndex: 'w',
            xtype: 'checkcolumn',
            width: 120
          }],
          viewConfig: {
            enableTextSelection: true,
            trackOver: true,
            stripeRows: false,
            getRowClass: function (record) {
              if (Ext.Date.isWeekend(record.get('d')))
                return 'we-row';
            }
          },
          dockedItems: [{
            xtype: 'toolbar',
            items: [{
              xtype: 'tbtext',
              text: ' Год: '
            }, {
              xtype: 'combobox',
              itemId: 'cbAn',
              store: storeAn,
              displayField: 'value',
              typeAhead: true,
              queryMode: 'local',
              emptyText: '*',
              selectOnFocus: true,
              width: 75,
              listeners: {
                beforerender: function () { this.setValue((new Date()).getFullYear(), false); }
              }
            }, {
              iconCls: 'icon-refresh',
              scope: this,
              text: 'Обновить',
              handler: this.onRefreshClick
            }, {
              iconCls: 'icon-save',
              scope: this,
              text: 'Сохранить',
              handler: this.onSaveClick
            }, {
              scope: this,
              text: 'Init',
              handler: this.onInitClick
            }]
          }]
        });
        this.callParent();
      },

      onRefreshClick: function () {
        this.store.proxy.extraParams = { year: this.down('#cbAn').getValue() };
        this.store.load();
      },

      onSaveClick: function () {
        this.store.sync({ success: function () {
          Ext.Msg.show({
            title: '@ViewBag.Title',
            msg: "Сохранено.",
            buttons: Ext.MessageBox.OK,
            icon: Ext.MessageBox.INFO,
            scope: this
          });
        }
        })
      },

      onInitClick: function () {
        Ext.Msg.show({
          title: '@ViewBag.Title',
          msg: 'Выполнить установку рабочих дней на ' + this.down('#cbAn').getValue()+', существующие данные будут удалены?',
          buttons: Ext.MessageBox.YESNO,
          icon: Ext.MessageBox.QUESTION,
          fn: function (btn, text) {
            if (btn == 'yes') {
              Ext.Ajax.request({
                method: 'POST',
                url: '@Url.Action("setupWorkDates")',
                timeout: 60000,
                params: { year: this.down('#cbAn').getValue() },
                success: function (response) {
                  Ext.Msg.show({
                    title: '@ViewBag.Title',
                    msg: "Выполнено.",
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO,
                    scope: this
                  });
                }
              })
            }
          },
          scope: this
        });
      }

    });

    Ext.onReady(function () {

      Ext.tip.QuickTipManager.init();
      Ext.create('Ext.Viewport', {
        layout: 'border',
        items: [{
          region: 'north',
          border: false,
          contentEl: 'header'
        }, {
          xtype: 'wdgrid',
          tabPosition: 'top',
          region: 'center'
        }]
      });

      //var grid = Ext.create('WD.Grid', {
      //  id: 'grid-panel',
      //  renderTo: 'grid'
      //});

    });
  </script>
}
@*<div id="grid" style="padding: 30px">
</div>*@
