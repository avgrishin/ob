#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using MO5;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Code/Views/Envoi/Index.cshtml")]
    public partial class _Areas_Code_Views_Envoi_Index_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Areas_Code_Views_Envoi_Index_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
  
  ViewBag.Title = "РАСКРЫТИЕ И ПРЕДОСТАВЛЕНИЕ ИНФОРМАЦИИ";
  Layout = "~/Views/Shared/_Layout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n");

DefineSection("scripts", () => {

WriteLiteral("\r\n  <style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n    .icon-user-add\r\n    {\r\n      background-image: url(");

            
            #line 9 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Href("~/Content/images/user_add.png"));

            
            #line default
            #line hidden
WriteLiteral(") !important;\r\n    }\r\n    .icon-save\r\n    {\r\n      background-image: url(");

            
            #line 13 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Href("~/Content/images/save.gif"));

            
            #line default
            #line hidden
WriteLiteral(") !important;\r\n    }\r\n    .icon-add\r\n    {\r\n      background-image: url(");

            
            #line 17 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Href("~/Content/images/add.png"));

            
            #line default
            #line hidden
WriteLiteral(") !important;\r\n    }\r\n    .icon-delete\r\n    {\r\n      background-image: url(");

            
            #line 21 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Href("~/Content/images/delete.png"));

            
            #line default
            #line hidden
WriteLiteral(") !important;\r\n    }\r\n    .icon-refresh\r\n    {\r\n      background-image: url(");

            
            #line 25 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Href("~/Scripts/ExtJS41/resources/themes/images/default/grid/refresh.gif"));

            
            #line default
            #line hidden
WriteLiteral(@") !important;
    }
    td.wrap-text div {
      white-space: normal;
    }
    .gray-row .x-grid-cell {
      text-decoration: line-through;
      color: gray;
  }
    .search-item
    {
      font: normal 11px tahoma, arial, helvetica, sans-serif;
      padding: 2px 5px 2px 5px;
      /*border: 1px solid #fff;*/
      border-bottom: 1px solid #eeeeee;
      white-space: normal;
      color: #555;
    }
    .search-item h3
    {
      display: block;
      font: inherit;
      font-weight: bold;
      color: #222;
    }
  </style>
  <link");

WriteAttribute("href", Tuple.Create(" href=\"", 1297), Tuple.Create("\"", 1347)
, Tuple.Create(Tuple.Create("", 1304), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/ExtJS41/resources/css/ext-all.css")
, 1304), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n  <link");

WriteAttribute("href", Tuple.Create(" href=\"", 1393), Tuple.Create("\"", 1445)
, Tuple.Create(Tuple.Create("", 1400), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/ExtJS41/ux/grid/css/GridFilters.css")
, 1400), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n  <script");

WriteAttribute("src", Tuple.Create(" src=\"", 1493), Tuple.Create("\"", 1529)
, Tuple.Create(Tuple.Create("", 1499), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/ExtJS41/bootstrap.js")
, 1499), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n  <script");

WriteAttribute("src", Tuple.Create(" src=\"", 1574), Tuple.Create("\"", 1612)
, Tuple.Create(Tuple.Create("", 1580), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/ExtJS41/ext-lang-ru.js")
, 1580), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n  <script");

WriteAttribute("src", Tuple.Create(" src=\"", 1657), Tuple.Create("\"", 1695)
, Tuple.Create(Tuple.Create("", 1663), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/ExtJS41/ux/Exporter.js")
, 1663), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n  <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n    Ext.Loader.setConfig({ enabled: true });\r\n    Ext.Loader.setPath(\'Ext.ux" +
"\', \'");

            
            #line 59 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                             Write(Href("~/Scripts/ExtJS41/ux"));

            
            #line default
            #line hidden
WriteLiteral("\');\r\n    Ext.require([\r\n      \'Ext.grid.*\',\r\n      \'Ext.data.*\',\r\n      \'Ext.tool" +
"bar.Paging\',\r\n      \'Ext.ux.grid.FiltersFeature\'\r\n    ]);\r\n\r\n    Ext.apply(Ext.f" +
"orm.VTypes, {\r\n      daterange: function (val, field) {\r\n        var date = fiel" +
"d.parseDate(val);\r\n        if (!date) {\r\n          return false;\r\n        }\r\n   " +
"     if (field.startDateField) {\r\n          var start = field.ownerCt.getCompone" +
"nt(field.startDateField);\r\n          if (!start.maxValue || (date.getTime() != s" +
"tart.maxValue.getTime())) {\r\n            start.setMaxValue(date);\r\n            s" +
"tart.validate();\r\n          }\r\n        }\r\n        else if (field.endDateField) {" +
"\r\n          var end = field.ownerCt.getComponent(field.endDateField);\r\n         " +
" if (!end.minValue || (date.getTime() != end.minValue.getTime())) {\r\n           " +
" end.setMinValue(date);\r\n            end.validate();\r\n          }\r\n        }\r\n  " +
"      /*\r\n        * Always return true since we\'re only using this vtype to set " +
"the\r\n        * min/max allowed values (these are tested for after the vtype test" +
")\r\n        */\r\n        return true;\r\n      }\r\n    });\r\n    Ext.define(\'Ext.ux.Cu" +
"stomNumber\', {\r\n      extend: \'Ext.form.field.Number\',\r\n      alias: \'widget.cus" +
"tomnumber\',\r\n\r\n      rawToValue: function (rawValue) {\r\n        var value = this" +
".fixPrecision(this.parseValue(rawValue));\r\n        if (value === null) {\r\n      " +
"    value = rawValue || null;\r\n        }\r\n        return value + \'\';\r\n      }\r\n " +
"   });\r\n\r\n    Ext.apply(Ext.util.Format, {\r\n      thousandSeparator: \' \',\r\n     " +
" decimalSeparator: \'.\'\r\n    });\r\n\r\n    Ext.define(\'Envoi\', {\r\n      extend: \'Ext" +
".data.Model\',\r\n      pageSize: 500,\r\n      remoteSort: true,\r\n      autoSync: fa" +
"lse,\r\n      autoLoad: false,\r\n      idProperty: \'id\',\r\n      fields: [\'id\', \'Typ" +
"eInf\', \'SrokRask\', \'Mesto\', \'Osnovan\', \'EmailTo\', \'EmailCc\', \'EmailToName\', \'Ema" +
"ilCcName\', \'PoryadPredst\', \'Periodich\', \'PeriodichID\', \'VidAktiv\', \'SrokRass\', \'" +
"IsAuto\', { name: \'IsEnabled\', type: \'bool\' }, \'TypeID\'],\r\n      proxy: {\r\n      " +
"  type: \'ajax\',\r\n        api: {\r\n          read: \'");

            
            #line 123 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getEnvoiList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 124 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addEnvoi"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 125 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updEnvoi"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 126 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delEnvoi"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.define('EnvoiExec', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'EnvoiID', { name: 'Date1', type: 'date', dateFormat: ""c"" }, { name: 'Date2', type: 'date', dateFormat: ""c"" }, 'TypeInf', 'Osnovan', 'Mesto', 'PoryadPredst', 'Periodich', 'PeriodichID', 'SrokRask', 'EmailTo', 'EmailCc', 'IsAuto', { name: 'IsEnabled', type: 'bool' }],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 156 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getEnvoiExecList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 157 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addEnvoiExec"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 158 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updEnvoiExec"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 159 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delEnvoiExec"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.define('CbModel', {
      extend: 'Ext.data.Model',
      idProperty: 'id',
      fields: ['id', 'name']
    });

    Ext.create('Ext.data.Store', {
      autoLoad: true,
      remoteSort: true,
      storeId: 'storePeriod',
      model: 'CbModel',
      proxy: {
        type: 'ajax',
        actionMethods: { read: 'POST' },
        url: '");

            
            #line 192 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("GetObjClsByParent"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '/26178',
        reader: {
          type: 'json',
          root: 'data'
        }
      }
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storea',
      model: 'Envoi'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storem',
      model: 'Envoi'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeri',
      model: 'Envoi'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeEE',
      model: 'EnvoiExec'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeeeri',
      model: 'EnvoiExec'
    });

    Ext.define('Conseil', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'Violation', 'Conseil', { name: 'Terme', type: 'date', dateFormat: 'c' }, { name: 'Prolongation', type: 'date', dateFormat: 'c' }, { name: 'ExecDate', type: 'date', dateFormat: 'c' }, 'EmailTo', 'EmailCc', 'Possesseur', 'Commentaire', { name: 'IsEnabled', type: 'bool' }, { name: 'PrononceDate', type: 'date', dateFormat: 'c' }, 'Priorite', 'PrioriteNom', 'MinNomRiskPrice', 'MaxNomRiskPrice'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 236 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getConseilList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 237 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addConseil"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 238 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updConseil"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 239 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delConseil"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeConseil',
      model: 'Conseil'
    });

    Ext.define('EMail', {
      extend: 'Ext.data.Model',
      idProperty: 'id',
      fields: ['id', 'name', 'email']
    });

    Ext.define('EnvoiHoraire', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'EnvoiID', 'EnvoiHoraireType', 'EnvoiHoraireTypeID', 'Mode', 'ModeID', 'Day', 'Month', 'Comment'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 280 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getEnvoiHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 281 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addEnvoiHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 282 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updEnvoiHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 283 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delEnvoiHoraire"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.define('ConseilHoraire', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'ConseilID', 'EnvoiHoraireType', 'EnvoiHoraireTypeID', 'Day', 'Month'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 313 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getConseilHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 314 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addConseilHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 315 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updConseilHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 316 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delConseilHoraire"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeCPriorite',
      remoteSort: true,
      autoLoad: true,
      fields: ['Text', 'Value'],
      proxy: {
        type: 'ajax',
        actionMethods: { read: 'POST' },
        url: '");

            
            #line 343 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("getCPriorite"));

            
            #line default
            #line hidden
WriteLiteral(@"',
        reader: {
          type: 'json',
          root: 'data'
        },
        simpleSortMode: true
      }
    });

    Ext.define('RiskMapHoraire', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'RiskMapID', 'EnvoiHoraireType', 'EnvoiHoraireTypeID', 'Day', 'Month'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 363 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getRiskMapHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 364 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addRiskMapHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 365 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updRiskMapHoraire"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 366 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delRiskMapHoraire"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    var storeEMail = Ext.create('Ext.data.Store', {
      //storeId: 'storeEMail',
      remoteSort: true,
      model: 'EMail',
      autoLoad: true,
      proxy: {
        actionMethods: { read: 'POST' },
        type: 'ajax',
        api: {
          read: '");

            
            #line 394 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getEMailList"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        reader: {
          type: 'json',
          root: 'data'
        },
        simpleSortMode: true
      }
    });

    Ext.define('EMailList', {
      extend: 'Ext.data.Model',
      idProperty: 'id',
      fields: ['id', 'name', 'email', { name: 'ui', type: 'bool' }]
    });

    var storeEMailTo = Ext.create('Ext.data.Store', {
      model: 'EMailList'
    });

    var storeEMailCc = Ext.create('Ext.data.Store', {
      model: 'EMailList'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeEnvoiHoraire',
      model: 'EnvoiHoraire'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeConseilHoraire',
      model: 'ConseilHoraire'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeRiskMapHoraire',
      model: 'RiskMapHoraire'
    });

    Ext.define('EnvoiHoraireType', {
      extend: 'Ext.data.Model',
      idProperty: 'id',
      fields: ['id', 'Name']
    });

    Ext.create('Ext.data.Store', {
      model: 'EnvoiHoraireType',
      storeId: 'storeEnvoiHoraireType',
      autoLoad: true,
      actionMethods: { read: 'POST' },
      proxy: {
        type: 'ajax',
        url: '");

            
            #line 446 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("getEnvoiHoraireType"));

            
            #line default
            #line hidden
WriteLiteral(@"',
        reader: {
          type: 'json',
          root: 'data'
        }
      }
    });

    Ext.define('RiskMap', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['id', 'BisProc', 'But', 'Control', 'ControlForce', 'EmailTo', 'EmailCc', 'Dep', 'EssentielRisk', 'Influence', 'JurPersonne', 'NumRisk', 'PossesseurBut', 'PossesseurControl', 'Probabilite', 'RiskName', 'InfluenceName', 'ProbabiliteName', 'ControlForceName', { name: 'IsEnabled', type: 'bool' }, 'TotalName'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 465 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getRiskMapList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 466 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addRiskMap"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 467 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updRiskMap"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 468 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delRiskMap"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeRiskMap',
      model: 'RiskMap'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeRMLevel',
      remoteSort: true,
      autoLoad: true,
      fields: ['Text', 'Value'],
      proxy: {
        type: 'ajax',
        actionMethods: { read: 'POST' },
        url: '");

            
            #line 500 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("getRMLevel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        reader: {\r\n          type: \'json\',\r\n          root: \'data\'\r\n        }" +
",\r\n        simpleSortMode: true\r\n      }\r\n    });\r\n\r\n    Ext.define(\'Envoi.Win\'," +
" {\r\n      extend: \'Ext.window.Window\',\r\n      alias: \'widget.envoiwin\',\r\n\r\n     " +
" initComponent: function () {\r\n        this.addEvents(\'create\');\r\n        this.a" +
"ddEvents(\'update\');\r\n        Ext.apply(this, {\r\n          width: 600,\r\n         " +
" closeAction: \'hide\',\r\n          modal: true,\r\n          buttonAlign: \'center\',\r" +
"\n          items: [{\r\n            xtype: \'form\',\r\n            border: false,\r\n  " +
"          activeRecord: null,\r\n            fieldDefaults: {\r\n              label" +
"Align: \'top\',\r\n              msgTarget: \'side\'\r\n            },\r\n            item" +
"s: [{\r\n              xtype: \'tabpanel\',\r\n              itemId: \'tp\',\r\n          " +
"    anchor: \'100%\',\r\n              //plain: false,\r\n              border: false," +
"\r\n              height: 560,\r\n              //flex: 1,\r\n              border: fa" +
"lse,\r\n              items: [{\r\n                tag: 0,\r\n                title: \'" +
"Параметры\',\r\n                bodyPadding: 10,\r\n                layout: \'anchor\'," +
"\r\n                border: false,\r\n                defaultType: \'textfield\',\r\n   " +
"             defaults: { anchor: \'100%\' },\r\n                items: [{\r\n         " +
"         xtype: \'textareafield\',\r\n                  grow: true,\r\n               " +
"   growMax: 100,\r\n                  name: \'TypeInf\',\r\n                  fieldLab" +
"el: \'Вид отчетности\'\r\n                }, {\r\n                  xtype: \'textareafi" +
"eld\',\r\n                  grow: true,\r\n                  growMax: 100,\r\n         " +
"         name: \'SrokRask\',\r\n                  fieldLabel: \'Срок направления\'\r\n  " +
"              }, {\r\n                  name: \'Mesto\',\r\n                  fieldLab" +
"el: \'Место предоставления\'\r\n                }, {\r\n                  name: \'Osnov" +
"an\',\r\n                  fieldLabel: \'Основание\'\r\n                }, {\r\n         " +
"         name: \'PoryadPredst\',\r\n                  fieldLabel: \'Порядок предостав" +
"ления\'\r\n                }, {\r\n                  xtype: \'fieldcontainer\',\r\n      " +
"            layout: \'hbox\',\r\n                  defaultType: \'textfield\',\r\n      " +
"            items: [{\r\n                    xtype: \'combo\',\r\n                    " +
"fieldLabel: \'Периодичность\',\r\n                    store: \'storePeriod\',\r\n       " +
"             displayField: \'name\',\r\n                    emptyText: \'*\',\r\n       " +
"             valueField: \'id\',\r\n                    typeAhead: true,\r\n          " +
"          queryMode: \'local\',\r\n                    selectOnFocus: true,\r\n       " +
"             name: \'PeriodichID\',\r\n                    width: \'50%\',\r\n          " +
"          margin: \'0 5 0 0\'\r\n                  }, {\r\n                    name: \'" +
"VidAktiv\',\r\n                    fieldLabel: \'Вид активов\',\r\n                    " +
"width: \'50%\',\r\n                    margin: \'0 0 0 5\'\r\n                  }]\r\n    " +
"            }, {\r\n                  name: \'SrokRass\',\r\n                  fieldLa" +
"bel: \'Срок рассылки для напоминаний\'\r\n                }, {\r\n                  xt" +
"ype: \'checkboxfield\',\r\n                  name: \'IsEnabled\',\r\n                  f" +
"ieldLabel: \'Активна\',\r\n                  labelAlign: \'right\',\r\n                 " +
" labelWidth: 50\r\n                }, {\r\n                  name: \'TypeID\',\r\n      " +
"            xtype: \'hidden\'\r\n                }, {\r\n                  name: \'IsAu" +
"to\',\r\n                  xtype: \'hidden\'\r\n                }, {\r\n                 " +
" itemId: \'EmailTo\',\r\n                  name: \'EmailTo\',\r\n                  xtype" +
": \'hidden\'\r\n                }, {\r\n                  itemId: \'EmailCc\',\r\n        " +
"          name: \'EmailCc\',\r\n                  xtype: \'hidden\'\r\n                }" +
"]\r\n              }, {\r\n                tag: 1,\r\n                title: \'Адресаты" +
"\',\r\n                layout: \'anchor\',\r\n                defaults: { anchor: \'100%" +
"\' },\r\n                border: false,\r\n                flex: 1,\r\n                " +
"items: [{\r\n                  xtype: \'grid\',\r\n                  border: false,\r\n " +
"                 itemId: \'gTo\',\r\n                  anchor: \'100% 50%\',\r\n        " +
"          title: \'Кому\',\r\n                  store: storeEMailTo,\r\n              " +
"    columns: [{\r\n                    xtype: \'checkcolumn\',\r\n                    " +
"dataIndex: \'ui\',\r\n                    width: 30\r\n                  }, {\r\n       " +
"             header: \"Имя\",\r\n                    dataIndex: \'name\',\r\n           " +
"         width: 240\r\n                  }, {\r\n                    header: \"EMail\"" +
",\r\n                    dataIndex: \'email\',\r\n                    flex: 1\r\n       " +
"           }]\r\n                }, {\r\n                  xtype: \'grid\',\r\n         " +
"         border: false,\r\n                  itemId: \'gCc\',\r\n                  anc" +
"hor: \'100% 50%\',\r\n                  title: \'Копия\',\r\n                  store: st" +
"oreEMailCc,\r\n                  columns: [{\r\n                    xtype: \'checkcol" +
"umn\',\r\n                    dataIndex: \'ui\',\r\n                    width: 30\r\n    " +
"              }, {\r\n                    header: \"Имя\",\r\n                    data" +
"Index: \'name\',\r\n                    width: 240\r\n                  }, {\r\n        " +
"            header: \"EMail\",\r\n                    dataIndex: \'email\',\r\n         " +
"           flex: 1\r\n                  }]\r\n                }]\r\n              }]\r\n" +
"            }]\r\n          }],\r\n          dockedItems: [{\r\n            xtype: \'to" +
"olbar\',\r\n            dock: \'bottom\',\r\n            ui: \'footer\',\r\n            ite" +
"ms: [\'->\', {\r\n              iconCls: \'icon-save\',\r\n              itemId: \'save\'," +
"\r\n              text: \'Сохранить\',\r\n              disabled: true,\r\n             " +
" scope: this,\r\n              handler: this.onSave\r\n            }, {\r\n           " +
"   //iconCls: \'icon-cancel\',\r\n              text: \'Отмена\',\r\n              scope" +
": this,\r\n              handler: this.onCancel\r\n            }]\r\n          }]\r\n   " +
"     });\r\n        this.callParent();\r\n      },\r\n\r\n      setActiveRecord: functio" +
"n (record) {\r\n        this.activeRecord = record;\r\n        if (record) {\r\n      " +
"    this.down(\'#save\').enable();\r\n          this.items.items[0].getForm().loadRe" +
"cord(record);\r\n        } else {\r\n          this.down(\'#save\').disable();\r\n      " +
"    this.items.items[0].getForm().reset();\r\n        }\r\n        var re = /\\s*,\\s*" +
"/\r\n        var to = (record.data.EmailTo == null ? \'\' : record.data.EmailTo).spl" +
"it(re);\r\n        var cc = (record.data.EmailCc == null ? \'\' : record.data.EmailC" +
"c).split(re);\r\n        storeEMailTo.removeAll();\r\n        storeEMailCc.removeAll" +
"();\r\n        storeEMail.each(function (r, i) {\r\n          storeEMailTo.add({ id:" +
" r.data.id, name: r.data.name, email: r.data.email, ui: Ext.Array.contains(to, r" +
".data.email) });\r\n          storeEMailCc.add({ id: r.data.id, name: r.data.name," +
" email: r.data.email, ui: Ext.Array.contains(cc, r.data.email) });\r\n        });\r" +
"\n        this.down(\'#gTo\').reconfigure(storeEMailTo);\r\n        this.down(\'#gCc\')" +
".reconfigure(storeEMailCc);\r\n        this.down(\'tabpanel\').setActiveTab(0);\r\n   " +
"   },\r\n\r\n      onSave: function () {\r\n        var active = this.activeRecord, fo" +
"rm = this.down(\'form\').getForm();\r\n        if (!active) {\r\n          return;\r\n  " +
"      }\r\n        var s = \'\', f = true;\r\n        storeEMailTo.each(function (r, i" +
") {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', \' : \'\') + r.data.emai" +
"l;\r\n            if (f) f = false;\r\n          }\r\n        });\r\n        this.down(\'" +
"#EmailTo\').setValue(s);\r\n        s = \'\';\r\n        f = true;\r\n        storeEMailC" +
"c.each(function (r, i) {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', " +
"\' : \'\') + r.data.email;\r\n            if (f) f = false;\r\n          }\r\n        });" +
"\r\n        this.down(\'#EmailCc\').setValue(s);\r\n        if (form.isValid()) {\r\n   " +
"       if (this.title == \'Добавить\')\r\n            this.fireEvent(\'create\', this," +
" form.getValues(false, false, false, true));\r\n          else {\r\n            form" +
".updateRecord(active);\r\n            this.fireEvent(\'update\');\r\n          }\r\n    " +
"      this.hide();\r\n        }\r\n      },\r\n\r\n      onCancel: function () {\r\n      " +
"  this.hide();\r\n      }\r\n    });\r\n\r\n    Ext.define(\'EnvoiRi.Win\', {\r\n      exten" +
"d: \'Ext.window.Window\',\r\n      alias: \'widget.envoiriwin\',\r\n\r\n      initComponen" +
"t: function () {\r\n        this.addEvents(\'create\');\r\n        this.addEvents(\'upd" +
"ate\');\r\n        Ext.apply(this, {\r\n          width: 600,\r\n          closeAction:" +
" \'hide\',\r\n          modal: true,\r\n          buttonAlign: \'center\',\r\n          it" +
"ems: [{\r\n            xtype: \'form\',\r\n            border: false,\r\n            act" +
"iveRecord: null,\r\n            fieldDefaults: {\r\n              labelAlign: \'top\'," +
"\r\n              msgTarget: \'side\'\r\n            },\r\n            items: [{\r\n      " +
"        xtype: \'tabpanel\',\r\n              itemId: \'tp\',\r\n              anchor: \'" +
"100%\',\r\n              border: false,\r\n              height: 560,\r\n              " +
"border: false,\r\n              items: [{\r\n                tag: 0,\r\n              " +
"  title: \'Параметры\',\r\n                bodyPadding: 10,\r\n                layout:" +
" \'anchor\',\r\n                border: false,\r\n                defaultType: \'textfi" +
"eld\',\r\n                defaults: { anchor: \'100%\' },\r\n                items: [{\r" +
"\n                  xtype: \'textareafield\',\r\n                  grow: true,\r\n     " +
"             growMax: 100,\r\n                  name: \'TypeInf\',\r\n                " +
"  fieldLabel: \'Вид раскрываемой информации\'\r\n                }, {\r\n             " +
"     name: \'Osnovan\',\r\n                  fieldLabel: \'Основание\'\r\n              " +
"  }, {\r\n                  xtype: \'combo\',\r\n                  fieldLabel: \'Период" +
"ичность\',\r\n                  store: \'storePeriod\',\r\n                  displayFie" +
"ld: \'name\',\r\n                  emptyText: \'*\',\r\n                  valueField: \'i" +
"d\',\r\n                  typeAhead: true,\r\n                  queryMode: \'local\',\r\n" +
"                  selectOnFocus: true,\r\n                  name: \'PeriodichID\',\r\n" +
"                  width: \'50%\',\r\n                  margin: \'0 5 0 0\'\r\n          " +
"      }, {\r\n                  xtype: \'textareafield\',\r\n                  grow: t" +
"rue,\r\n                  growMax: 100,\r\n                  name: \'SrokRask\',\r\n    " +
"              fieldLabel: \'Срок раскрытия\'\r\n                }, {\r\n              " +
"    xtype: \'checkboxfield\',\r\n                  name: \'IsEnabled\',\r\n             " +
"     fieldLabel: \'Активна\',\r\n                  labelAlign: \'right\',\r\n           " +
"       labelWidth: 50\r\n                }, {\r\n                  name: \'TypeID\',\r\n" +
"                  xtype: \'hidden\'\r\n                }, {\r\n                  name:" +
" \'IsAuto\',\r\n                  xtype: \'hidden\'\r\n                }, {\r\n           " +
"       itemId: \'EmailTo\',\r\n                  name: \'EmailTo\',\r\n                 " +
" xtype: \'hidden\'\r\n                }, {\r\n                  itemId: \'EmailCc\',\r\n  " +
"                name: \'EmailCc\',\r\n                  xtype: \'hidden\'\r\n           " +
"     }]\r\n              }, {\r\n                tag: 1,\r\n                title: \'Ад" +
"ресаты\',\r\n                layout: \'anchor\',\r\n                defaults: { anchor:" +
" \'100%\' },\r\n                border: false,\r\n                flex: 1,\r\n          " +
"      items: [{\r\n                  xtype: \'grid\',\r\n                  border: fal" +
"se,\r\n                  itemId: \'gTo\',\r\n                  anchor: \'100% 50%\',\r\n  " +
"                title: \'Кому\',\r\n                  store: storeEMailTo,\r\n        " +
"          columns: [{\r\n                    xtype: \'checkcolumn\',\r\n              " +
"      dataIndex: \'ui\',\r\n                    width: 30\r\n                  }, {\r\n " +
"                   header: \"Имя\",\r\n                    dataIndex: \'name\',\r\n     " +
"               width: 240\r\n                  }, {\r\n                    header: \"" +
"EMail\",\r\n                    dataIndex: \'email\',\r\n                    flex: 1\r\n " +
"                 }]\r\n                }, {\r\n                  xtype: \'grid\',\r\n   " +
"               border: false,\r\n                  itemId: \'gCc\',\r\n               " +
"   anchor: \'100% 50%\',\r\n                  title: \'Копия\',\r\n                  sto" +
"re: storeEMailCc,\r\n                  columns: [{\r\n                    xtype: \'ch" +
"eckcolumn\',\r\n                    dataIndex: \'ui\',\r\n                    width: 30" +
"\r\n                  }, {\r\n                    header: \"Имя\",\r\n                  " +
"  dataIndex: \'name\',\r\n                    width: 240\r\n                  }, {\r\n  " +
"                  header: \"EMail\",\r\n                    dataIndex: \'email\',\r\n   " +
"                 flex: 1\r\n                  }]\r\n                }]\r\n            " +
"  }]\r\n            }]\r\n          }],\r\n          dockedItems: [{\r\n            xtyp" +
"e: \'toolbar\',\r\n            dock: \'bottom\',\r\n            ui: \'footer\',\r\n         " +
"   items: [\'->\', {\r\n              iconCls: \'icon-save\',\r\n              itemId: \'" +
"save\',\r\n              text: \'Сохранить\',\r\n              disabled: true,\r\n       " +
"       scope: this,\r\n              handler: this.onSave\r\n            }, {\r\n     " +
"         //iconCls: \'icon-cancel\',\r\n              text: \'Отмена\',\r\n             " +
" scope: this,\r\n              handler: this.onCancel\r\n            }]\r\n          }" +
"]\r\n        });\r\n        this.callParent();\r\n      },\r\n\r\n      setActiveRecord: f" +
"unction (record) {\r\n        this.activeRecord = record;\r\n        if (record) {\r\n" +
"          this.down(\'#save\').enable();\r\n          this.items.items[0].getForm()." +
"loadRecord(record);\r\n        } else {\r\n          this.down(\'#save\').disable();\r\n" +
"          this.items.items[0].getForm().reset();\r\n        }\r\n        var re = /\\" +
"s*,\\s*/\r\n        var to = (record.data.EmailTo == null ? \'\' : record.data.EmailT" +
"o).split(re);\r\n        var cc = (record.data.EmailCc == null ? \'\' : record.data." +
"EmailCc).split(re);\r\n        storeEMailTo.removeAll();\r\n        storeEMailCc.rem" +
"oveAll();\r\n        storeEMail.each(function (r, i) {\r\n          storeEMailTo.add" +
"({ id: r.data.id, name: r.data.name, email: r.data.email, ui: Ext.Array.contains" +
"(to, r.data.email) });\r\n          storeEMailCc.add({ id: r.data.id, name: r.data" +
".name, email: r.data.email, ui: Ext.Array.contains(cc, r.data.email) });\r\n      " +
"  });\r\n        this.down(\'#gTo\').reconfigure(storeEMailTo);\r\n        this.down(\'" +
"#gCc\').reconfigure(storeEMailCc);\r\n        this.down(\'tabpanel\').setActiveTab(0)" +
";\r\n      },\r\n\r\n      onSave: function () {\r\n        var active = this.activeReco" +
"rd, form = this.down(\'form\').getForm();\r\n        if (!active) {\r\n          retur" +
"n;\r\n        }\r\n        var s = \'\', f = true;\r\n        storeEMailTo.each(function" +
" (r, i) {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', \' : \'\') + r.dat" +
"a.email;\r\n            if (f) f = false;\r\n          }\r\n        });\r\n        this." +
"down(\'#EmailTo\').setValue(s);\r\n        s = \'\';\r\n        f = true;\r\n        store" +
"EMailCc.each(function (r, i) {\r\n          if (r.data.ui) {\r\n            s += (!f" +
" ? \', \' : \'\') + r.data.email;\r\n            if (f) f = false;\r\n          }\r\n     " +
"   });\r\n        this.down(\'#EmailCc\').setValue(s);\r\n        if (form.isValid()) " +
"{\r\n          if (this.title == \'Добавить\')\r\n            this.fireEvent(\'create\'," +
" this, form.getValues(false, false, false, true));\r\n          else {\r\n          " +
"  form.updateRecord(active);\r\n            this.fireEvent(\'update\');\r\n          }" +
"\r\n          this.hide();\r\n        }\r\n      },\r\n\r\n      onCancel: function () {\r\n" +
"        this.hide();\r\n      }\r\n    });\r\n\r\n    Ext.define(\'EnvoiExec.Win\', {\r\n   " +
"   extend: \'Ext.window.Window\',\r\n      alias: \'widget.envoiexecwin\',\r\n\r\n      in" +
"itComponent: function () {\r\n        this.addEvents(\'create\');\r\n        this.addE" +
"vents(\'update\');\r\n        Ext.apply(this, {\r\n          width: 600,\r\n\r\n          " +
"closeAction: \'hide\',\r\n          modal: true,\r\n          buttonAlign: \'center\',\r\n" +
"          items: [{\r\n            xtype: \'form\',\r\n            border: false,\r\n   " +
"         height: 300,\r\n            defaults: { anchor: \'100%\' },\r\n            bo" +
"dyPadding: 10,\r\n            activeRecord: null,\r\n            fieldDefaults: {\r\n " +
"             labelAlign: \'top\',\r\n              msgTarget: \'side\'\r\n            }," +
"\r\n            items: [{\r\n              xtype: \'displayfield\',\r\n              nam" +
"e: \'TypeInf\',\r\n              height: 230,\r\n              autoScroll: true,\r\n    " +
"          fieldLabel: \'Вид отчетности\'\r\n            }, {\r\n              xtype: \'" +
"fieldcontainer\',\r\n              layout: \'hbox\',\r\n              defaultType: \'tex" +
"tfield\',\r\n              items: [{\r\n                itemId: \'Date1\',\r\n           " +
"     xtype: \'datefield\',\r\n                name: \'Date1\',\r\n                fieldL" +
"abel: \'Дата\',\r\n                startDay: 1,\r\n                format: \'d.m.Y\',\r\n " +
"               margin: \'0 5 0 0\',\r\n                allowBlank: false\r\n          " +
"    }, {\r\n                itemId: \'Date2\',\r\n                xtype: \'datefield\',\r" +
"\n                name: \'Date2\',\r\n                fieldLabel: \'Дата факт. направ." +
"\',\r\n                startDay: 1,\r\n                format: \'d.m.Y\',\r\n            " +
"    margin: \'0 0 0 5\'\r\n              }]\r\n            }, {\r\n              name: \'" +
"EnvoiID\',\r\n              xtype: \'hidden\'\r\n            }]\r\n          }],\r\n       " +
"   dockedItems: [{\r\n            xtype: \'toolbar\',\r\n            dock: \'bottom\',\r\n" +
"            ui: \'footer\',\r\n            items: [\'->\', {\r\n              iconCls: \'" +
"icon-save\',\r\n              itemId: \'save\',\r\n              text: \'Сохранить\',\r\n  " +
"            disabled: true,\r\n              scope: this,\r\n              handler: " +
"this.onSave\r\n            }, {\r\n              //iconCls: \'icon-cancel\',\r\n        " +
"      text: \'Отмена\',\r\n              scope: this,\r\n              handler: this.o" +
"nCancel\r\n            }]\r\n          }]\r\n        });\r\n        this.callParent();\r\n" +
"      },\r\n\r\n      setActiveRecord: function (record) {\r\n        this.activeRecor" +
"d = record;\r\n        if (record) {\r\n          this.down(\'#save\').enable();\r\n    " +
"      this.down(\'form\').getForm().loadRecord(record);\r\n        } else {\r\n       " +
"   this.down(\'#save\').disable();\r\n          this.down(\'form\').getForm().reset();" +
"\r\n        }\r\n      },\r\n\r\n      onSave: function () {\r\n        var active = this." +
"activeRecord, form = this.down(\'form\').getForm();\r\n        if (!active) {\r\n     " +
"     return;\r\n        }\r\n        if (form.isValid()) {\r\n          if (this.title" +
" == \'Добавить\')\r\n            this.fireEvent(\'create\', this, form.getValues(false" +
", false, false, true));\r\n          else {\r\n            form.updateRecord(active)" +
";\r\n            this.fireEvent(\'update\');\r\n          }\r\n          this.hide();\r\n " +
"       }\r\n      },\r\n\r\n      onCancel: function () {\r\n        this.hide();\r\n     " +
" }\r\n    });\r\n\r\n    Ext.define(\'Horraire.Win\', {\r\n      extend: \'Ext.window.Windo" +
"w\',\r\n      alias: \'widget.horraire\',\r\n\r\n      initComponent: function () {\r\n    " +
"    this.addEvents(\'create\');\r\n        this.addEvents(\'update\');\r\n        this.a" +
"ddEvents(\'delete\');\r\n        Ext.apply(this, {\r\n          width: 600,\r\n         " +
" height: 500,\r\n          layout: \'fit\',\r\n          closeAction: \'hide\',\r\n       " +
"   modal: true,\r\n          activeRecord: null,\r\n          plain: true,\r\n        " +
"  buttonAlign: \'center\',\r\n          title: \'Расписание\',\r\n          items: [{\r\n " +
"           xtype: \'form\',\r\n            itemId: \'pnl\',\r\n            layout: {\r\n  " +
"            type: \'vbox\',\r\n              align: \'stretch\'\r\n            },\r\n     " +
"       anchor: \'100%\',\r\n            plain: false,\r\n            border: false,\r\n " +
"           bodyPadding: 10,\r\n            layout: \'anchor\',\r\n            border: " +
"false,\r\n            defaultType: \'textfield\',\r\n            defaults: { anchor: \'" +
"100%\' },\r\n            items: [{\r\n              xtype: \'combobox\',\r\n             " +
" name: \'EnvoiHoraireTypeID\',\r\n              fieldLabel: \'Срок рассылки\',\r\n      " +
"        displayField: \'Name\',\r\n              valueField: \'id\',\r\n              ty" +
"peAhead: false,\r\n              queryMode: \'local\',\r\n              forceSelection" +
": true,\r\n              triggerAction: \'all\',\r\n              selectOnFocus: true," +
"\r\n              store: \'storeEnvoiHoraireType\',\r\n              listeners: {\r\n   " +
"             //scope: this,\r\n                select: function () {\r\n            " +
"      if (this.getValue() == 1)\r\n                    this.up(\'form\').down(\'#fMon" +
"th\').show();\r\n                  else {\r\n                    this.up(\'form\').down" +
"(\'#fMonth\').hide();\r\n                    this.up(\'form\').down(\'#fMonth\').setValu" +
"e(null);\r\n                  }\r\n                  if (this.getValue() >= 5 && thi" +
"s.getValue() <= 10) {\r\n                    this.up(\'form\').down(\'#fDay\').hide();" +
"\r\n                    this.up(\'form\').down(\'#fDay\').setValue(null);\r\n           " +
"       }\r\n                  else\r\n                    this.up(\'form\').down(\'#fDa" +
"y\').show();\r\n\r\n                  //if (this.getValue() == 1)\r\n                  " +
"//  this.up(\'form\').down(\'#fc\').show();\r\n                  //else\r\n             " +
"     //  this.up(\'form\').down(\'#fc\').hide();\r\n                  this.up(\'form\')." +
"down(\'#EnvoiHoraireType\').setValue(this.getRawValue());\r\n                }\r\n    " +
"          }\r\n            }, {\r\n              xtype: \'combobox\',\r\n              n" +
"ame: \'ModeID\',\r\n              fieldLabel: \'Вид\',\r\n              displayField: \'v" +
"alue\',\r\n              valueField: \'id\',\r\n              typeAhead: false,\r\n      " +
"        queryMode: \'local\',\r\n              forceSelection: true,\r\n              " +
"triggerAction: \'all\',\r\n              selectOnFocus: true,\r\n              store: " +
"Ext.create(\'Ext.data.ArrayStore\', {\r\n                fields: [\'id\', \'value\'],\r\n " +
"               data: [[0, \'Напоминание\'], [1, \'Срок направления\']]\r\n            " +
"  })\r\n            }, {\r\n              xtype: \'fieldcontainer\',\r\n              it" +
"emId: \'fc\',\r\n              layout: \'hbox\',\r\n              defaultType: \'textfiel" +
"d\',\r\n              fieldDefaults: { labelWidth: 50, labelAlign: \'right\' },\r\n    " +
"          items: [{\r\n                name: \'Day\',\r\n                fieldLabel: \'" +
"День\',\r\n                width: 80,\r\n                itemId: \'fDay\',\r\n           " +
"     regex: /[0-9]*[1-9][0-9]*/\r\n              }, {\r\n                name: \'Mont" +
"h\',\r\n                fieldLabel: \'Месяц\',\r\n                width: 80,\r\n         " +
"       itemId: \'fMonth\'\r\n              }]\r\n            }, {\r\n              name:" +
" \'Comment\',\r\n              fieldLabel: \'Примечание\'\r\n            }, {\r\n         " +
"     name: \'EnvoiID\',\r\n              xtype: \'hidden\'\r\n            }, {\r\n        " +
"      name: \'ConseilID\',\r\n              xtype: \'hidden\'\r\n            }, {\r\n     " +
"         name: \'RiskMapID\',\r\n              xtype: \'hidden\'\r\n            }, {\r\n  " +
"            name: \'EnvoiHoraireType\',\r\n              itemId: \'EnvoiHoraireType\'," +
"\r\n              xtype: \'hidden\'\r\n            }]\r\n          }],\r\n\r\n          dock" +
"edItems: [{\r\n            xtype: \'toolbar\',\r\n            dock: \'bottom\',\r\n       " +
"     ui: \'footer\',\r\n            items: [\'->\', {\r\n              iconCls: \'icon-sa" +
"ve\',\r\n              itemId: \'save\',\r\n              text: \'Сохранить\',\r\n         " +
"     disabled: true,\r\n              scope: this,\r\n              handler: this.on" +
"Save\r\n            }, {\r\n              //iconCls: \'icon-cancel\',\r\n              t" +
"ext: \'Отмена\',\r\n              scope: this,\r\n              handler: this.onCancel" +
"\r\n            }]\r\n          }]\r\n        });\r\n        this.callParent();\r\n      }" +
",\r\n\r\n      setActiveRecord: function (record) {\r\n        this.activeRecord = rec" +
"ord;\r\n        if (record.data.EnvoiHoraireTypeID == 1)\r\n          this.down(\'#fM" +
"onth\').show()\r\n        else\r\n          this.down(\'#fMonth\').hide()\r\n        if (" +
"record.data.EnvoiHoraireTypeID >= 5 && record.data.EnvoiHoraireTypeID <= 10)\r\n  " +
"        this.down(\'#fDay\').hide()\r\n        else\r\n          this.down(\'#fDay\').sh" +
"ow()\r\n\r\n        //if (record.data.EnvoiHoraireTypeID == 1)\r\n        //  this.dow" +
"n(\'#fc\').show();\r\n        //else\r\n        //  this.down(\'#fc\').hide();\r\n\r\n      " +
"  if (record) {\r\n          this.down(\'#save\').enable();\r\n          this.down(\'fo" +
"rm\').getForm().loadRecord(record);\r\n        } else {\r\n          this.down(\'#save" +
"\').disable();\r\n          this.down(\'form\').getForm().reset();\r\n        }\r\n      " +
"},\r\n\r\n      onSave: function () {\r\n        var active = this.activeRecord, form " +
"= this.down(\'form\').getForm();\r\n        if (!active) {\r\n          return;\r\n     " +
"   }\r\n        if (form.isValid()) {\r\n          if (this.title == \'Добавить\')\r\n  " +
"          this.fireEvent(\'create\', this, form.getValues(false, false, false, tru" +
"e));\r\n          else {\r\n            form.updateRecord(active);\r\n            this" +
".fireEvent(\'update\');\r\n          }\r\n          this.hide();\r\n        }\r\n      },\r" +
"\n\r\n      onCancel: function () {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    " +
"Ext.define(\'Envoi.Grid\', {\r\n      extend: \'Ext.grid.Panel\',\r\n      alias: \'widge" +
"t.envoigrid\',\r\n      initComponent: function () {\r\n        Ext.apply(this, {\r\n  " +
"        wini: null,\r\n          defaultType: \'textfield\',\r\n          invalidateSc" +
"rollerOnRefresh: false,\r\n          layoutConfig: { labelSeparator: \'\' },\r\n      " +
"    viewConfig: {\r\n            enableTextSelection: true,\r\n            getRowCla" +
"ss: function (record) {\r\n              if (!record.get(\'IsEnabled\'))\r\n          " +
"      return \'gray-row\';\r\n            }\r\n          },\r\n          columns: [{\r\n  " +
"          header: \'Вид отчетности\',\r\n            dataIndex: \'TypeInf\',\r\n        " +
"    //width: 200,\r\n            flex: 1,\r\n            tdCls: \'wrap-text\'\r\n       " +
"   }, {\r\n            header: \'Срок направления\',\r\n            dataIndex: \'SrokRa" +
"sk\',\r\n            width: 150,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n " +
"           header: \'Место предоставления\',\r\n            dataIndex: \'Mesto\',\r\n   " +
"         width: 100,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n          " +
"  header: \'Основание\',\r\n            dataIndex: \'Osnovan\',\r\n            width: 12" +
"0,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Список " +
"получателей\',\r\n            dataIndex: \'EmailToName\',\r\n            width: 140,\r\n " +
"           tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Список получ" +
"ателей в копии\',\r\n            dataIndex: \'EmailCcName\',\r\n            width: 140," +
"\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Порядок п" +
"редоставления\',\r\n            dataIndex: \'PoryadPredst\',\r\n            width: 90,\r" +
"\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Периодично" +
"сть\',\r\n            dataIndex: \'Periodich\',\r\n            width: 90,\r\n            " +
"tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Вид активов\',\r\n        " +
"    dataIndex: \'VidAktiv\',\r\n            width: 80,\r\n            tdCls: \'wrap-tex" +
"t\'\r\n          }, {\r\n            header: \'Срок рассылки для напоминаний\',\r\n      " +
"      dataIndex: \'SrokRass\',\r\n            width: 130,\r\n            tdCls: \'wrap-" +
"text\'\r\n          }, {\r\n            header: \'id\',\r\n            dataIndex: \'id\',\r\n" +
"            width: 30,\r\n            hidden: true\r\n          }],\r\n          docke" +
"dItems: [{\r\n            xtype: \'toolbar\',\r\n            dock: \'top\',\r\n           " +
" items: [{\r\n              iconCls: \'icon-add\',\r\n              text: \'Добавить\',\r" +
"\n              scope: this,\r\n              handler: this.onAddClick\r\n           " +
" }, {\r\n              text: \'Изменить\',\r\n              disabled: true,\r\n         " +
"     itemId: \'change\',\r\n              scope: this,\r\n              handler: this." +
"onChangeClick\r\n            }, \' Действующие: \', {\r\n              xtype: \'checkbo" +
"x\',\r\n              itemId: \'cbIsActive\'\r\n            }, {\r\n              iconCls" +
": \'icon-refresh\',\r\n              text: \'Обновить\',\r\n              scope: this,\r\n" +
"              handler: this.onRefreshClick\r\n            }, {\r\n              icon" +
"Cls: \'icon-delete\',\r\n              text: \'Удалить\',\r\n              disabled: tru" +
"e,\r\n              itemId: \'delete\',\r\n              scope: this,\r\n              h" +
"andler: this.onDeleteClick\r\n            }, {\r\n              text: \'Отправить\',\r\n" +
"              itemId: \'sendEmail\',\r\n              disabled: true,\r\n             " +
" scope: this,\r\n              handler: this.onSendEmailClick\r\n            }, {\r\n " +
"             xtype: \'exporterbutton\',\r\n              text: \'Экспорт\',\r\n         " +
"     action: \'");

            
            #line 1376 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'ar.xml'
            }, {
              iconCls: 'icon-add',
              itemId: 'addexec',
              text: 'Добавить в журнал',
              disabled: true,
              scope: this,
              handler: this.onAddExecClick
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 1396 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("envoyerCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            params: {\r\n              id: this.ge" +
"tView().getSelectionModel().getSelection()[0].data.id\r\n            },\r\n         " +
"   success: function (response) {\r\n              var text = response.responseTex" +
"t;\r\n              alert(\'Выполнено.\');\r\n            },\r\n            failure: fun" +
"ction (response) {\r\n              var text = response.responseText;\r\n           " +
"   alert(\'Ошибка!\');\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n     " +
" onRefreshClick: function () {\r\n        this.store.proxy.extraParams = { isAuto:" +
" this.up(\'panel\').tag == 1, TypeID: this.up(\'panel\').TypeID, IsActive: this.down" +
"(\'#cbIsActive\').getValue() };\r\n        this.store.load();\r\n        var o = this." +
"up(\'panel\').down(\'#horraire\');\r\n        if (o) o.down(\'#create\').setDisabled(tru" +
"e);\r\n      },\r\n\r\n      onCreateWin: function () {\r\n        this.wini = Ext.creat" +
"e(\'Envoi.Win\', {\r\n          scope: this,\r\n          listeners: {\r\n            sc" +
"ope: this,\r\n            create: function (form, data) {\r\n              this.stor" +
"e.insert(0, data);\r\n              this.store.sync();\r\n            },\r\n          " +
"  update: function () {\r\n              this.store.sync();\r\n            }\r\n      " +
"    }\r\n        });\r\n      },\r\n\r\n      onAddClick: function () {\r\n        var rec" +
" = new Envoi({ IsAuto: this.up(\'panel\').tag == 1, TypeID: this.up(\'panel\').TypeI" +
"D });\r\n        if (!this.wini) {\r\n          this.onCreateWin();\r\n        }\r\n    " +
"    this.wini.setTitle(\'Добавить\');\r\n        this.wini.setActiveRecord(rec);\r\n  " +
"      this.wini.show(this);\r\n      },\r\n\r\n      onChangeClick: function () {\r\n   " +
"     if (!this.wini) {\r\n          this.onCreateWin();\r\n        }\r\n        this.w" +
"ini.setTitle(\'Изменить\');\r\n        this.wini.setActiveRecord(this.getSelectionMo" +
"del().getSelection()[0]);\r\n        this.wini.show(this);\r\n      },\r\n\r\n      onSe" +
"lectChange: function (selModel, selections) {\r\n        this.down(\'#delete\').setD" +
"isabled(selections.length === 0);\r\n        this.down(\'#change\').setDisabled(sele" +
"ctions.length === 0);\r\n        this.down(\'#sendEmail\').setDisabled(selections.le" +
"ngth === 0);\r\n        this.down(\'#addexec\').setDisabled(selections.length === 0)" +
";\r\n        var grid = this.up(\'panel\').down(\'#horraire\');\r\n        if (grid) {\r\n" +
"          if (selections.length === 0) {\r\n            grid.down(\'#create\').setDi" +
"sabled(true);\r\n          }\r\n          else {\r\n            grid.store.proxy.extra" +
"Params = { id: this.getView().getSelectionModel().getSelection()[0].data.id };\r\n" +
"            grid.store.load();\r\n            grid.down(\'#create\').setDisabled(fal" +
"se);\r\n          }\r\n        }\r\n      },\r\n\r\n      onRowDblClick: function () {\r\n  " +
"      this.onChangeClick();\r\n      },\r\n\r\n      onSync: function () {\r\n        th" +
"is.store.sync();\r\n      },\r\n\r\n      onDeleteClick: function () {\r\n        var se" +
"lection = this.getView().getSelectionModel().getSelection()[0];\r\n        if (sel" +
"ection) {\r\n          if (window.confirm(\'Удалить стр.?\')) {\r\n            this.st" +
"ore.remove(selection);\r\n            this.onSync();\r\n          }\r\n        }\r\n    " +
"  },\r\n\r\n      onAddExecClick: function () {\r\n        var rec = new EnvoiExec({ D" +
"ate1: Ext.Date.clearTime(new Date(), false), EnvoiID: this.getView().getSelectio" +
"nModel().getSelection()[0].data.id, TypeInf: this.getView().getSelectionModel()." +
"getSelection()[0].data.TypeInf });\r\n        var gr = this.up(\'tabpanel\').down(\'#" +
"tcJourEE\').down(\'grid\');\r\n        if (!gr.wini)\r\n          gr.onCreateWin();\r\n  " +
"      gr.wini.setTitle(\'Добавить\');\r\n        gr.wini.setActiveRecord(rec);\r\n    " +
"    gr.wini.show(this);\r\n\r\n        //if (!this.winie) {\r\n        //  this.onCrea" +
"teWin();\r\n        //}\r\n        //this.wini.setTitle(\'Добавить\');\r\n        //this" +
".wini.setActiveRecord(rec);\r\n        //this.wini.show(this);\r\n      }\r\n\r\n    });" +
"\r\n\r\n    Ext.define(\'EnvoiRi.Grid\', {\r\n      extend: \'Ext.grid.Panel\',\r\n      ali" +
"as: \'widget.envoirigrid\',\r\n      initComponent: function () {\r\n        Ext.apply" +
"(this, {\r\n          wini: null,\r\n          defaultType: \'textfield\',\r\n          " +
"invalidateScrollerOnRefresh: false,\r\n          layoutConfig: { labelSeparator: \'" +
"\' },\r\n          viewConfig: {\r\n            enableTextSelection: true,\r\n         " +
"   getRowClass: function (record) {\r\n              if (!record.get(\'IsEnabled\'))" +
"\r\n                return \'gray-row\';\r\n            }\r\n          },\r\n          col" +
"umns: [{\r\n            header: \'Вид раскрываемой информации\',\r\n            dataIn" +
"dex: \'TypeInf\',\r\n            flex: 1,\r\n            tdCls: \'wrap-text\'\r\n         " +
" }, {\r\n            header: \'Основание\',\r\n            dataIndex: \'Osnovan\',\r\n    " +
"        width: 400,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n           " +
" header: \'Периодичность\',\r\n            dataIndex: \'Periodich\',\r\n            widt" +
"h: 90,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Сро" +
"к раскрытия\',\r\n            dataIndex: \'SrokRask\',\r\n            width: 150,\r\n    " +
"        tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'ОЛ за представл" +
"ение инфо-и\',\r\n            dataIndex: \'EmailToName\',\r\n            width: 140,\r\n " +
"           tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'ОЛ за раскры" +
"тие инфо-и\',\r\n            dataIndex: \'EmailCcName\',\r\n            width: 140,\r\n  " +
"          tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'id\',\r\n       " +
"     dataIndex: \'id\',\r\n            width: 30,\r\n            hidden: true\r\n       " +
"   }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r\n            do" +
"ck: \'top\',\r\n            items: [{\r\n              iconCls: \'icon-add\',\r\n         " +
"     text: \'Добавить\',\r\n              scope: this,\r\n              handler: this." +
"onAddClick\r\n            }, {\r\n              text: \'Изменить\',\r\n              dis" +
"abled: true,\r\n              itemId: \'change\',\r\n              scope: this,\r\n     " +
"         handler: this.onChangeClick\r\n            }, {\r\n              iconCls: \'" +
"icon-refresh\',\r\n              text: \'Обновить\',\r\n              scope: this,\r\n   " +
"           handler: this.onRefreshClick\r\n            }, {\r\n              iconCls" +
": \'icon-delete\',\r\n              text: \'Удалить\',\r\n              disabled: true,\r" +
"\n              itemId: \'delete\',\r\n              scope: this,\r\n              hand" +
"ler: this.onDeleteClick\r\n            }, {\r\n              text: \'Отправить\',\r\n   " +
"           itemId: \'sendEmail\',\r\n              disabled: true,\r\n              sc" +
"ope: this,\r\n              handler: this.onSendEmailClick\r\n            }, {\r\n    " +
"          xtype: \'exporterbutton\',\r\n              text: \'Экспорт\',\r\n            " +
"  action: \'");

            
            #line 1597 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'ar.xml'
            }, {
              iconCls: 'icon-add',
              itemId: 'addexec',
              text: 'Добавить в журнал',
              disabled: true,
              scope: this,
              handler: this.onAddExecClick
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
      },

      onSendEmailClick: function () {
        return
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 1618 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("envoyerCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            params: {\r\n              id: this.ge" +
"tView().getSelectionModel().getSelection()[0].data.id\r\n            },\r\n         " +
"   success: function (response) {\r\n              var text = response.responseTex" +
"t;\r\n              alert(\'Выполнено.\');\r\n            },\r\n            failure: fun" +
"ction (response) {\r\n              var text = response.responseText;\r\n           " +
"   alert(\'Ошибка!\');\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n     " +
" onRefreshClick: function () {\r\n        this.store.proxy.extraParams = { isAuto:" +
" this.up(\'panel\').tag == 1, TypeID: this.up(\'panel\').TypeID };\r\n        this.sto" +
"re.load();\r\n      },\r\n\r\n      onCreateWin: function () {\r\n        this.wini = Ex" +
"t.create(\'EnvoiRi.Win\', {\r\n          scope: this,\r\n          listeners: {\r\n     " +
"       scope: this,\r\n            create: function (form, data) {\r\n              " +
"this.store.insert(0, data);\r\n              this.store.sync();\r\n            },\r\n " +
"           update: function () {\r\n              this.store.sync();\r\n            " +
"}\r\n          }\r\n        });\r\n      },\r\n\r\n      onAddClick: function () {\r\n      " +
"  var rec = new Envoi({ IsAuto: this.up(\'panel\').tag == 1, TypeID: this.up(\'pane" +
"l\').TypeID });\r\n        if (!this.wini) {\r\n          this.onCreateWin();\r\n      " +
"  }\r\n        this.wini.setTitle(\'Добавить\');\r\n        this.wini.setActiveRecord(" +
"rec);\r\n        this.wini.show(this);\r\n      },\r\n\r\n      onChangeClick: function " +
"() {\r\n        if (!this.wini) {\r\n          this.onCreateWin();\r\n        }\r\n     " +
"   this.wini.setTitle(\'Изменить\');\r\n        this.wini.setActiveRecord(this.getSe" +
"lectionModel().getSelection()[0]);\r\n        this.wini.show(this);\r\n      },\r\n\r\n " +
"     onSelectChange: function (selModel, selections) {\r\n        this.down(\'#dele" +
"te\').setDisabled(selections.length === 0);\r\n        this.down(\'#change\').setDisa" +
"bled(selections.length === 0);\r\n        this.down(\'#sendEmail\').setDisabled(sele" +
"ctions.length === 0);\r\n        this.down(\'#addexec\').setDisabled(selections.leng" +
"th === 0);\r\n      },\r\n\r\n      onRowDblClick: function () {\r\n        this.onChang" +
"eClick();\r\n      },\r\n\r\n      onSync: function () {\r\n        this.store.sync();\r\n" +
"      },\r\n\r\n      onDeleteClick: function () {\r\n        var selection = this.get" +
"View().getSelectionModel().getSelection()[0];\r\n        if (selection) {\r\n       " +
"   if (window.confirm(\'Удалить стр.?\')) {\r\n            this.store.remove(selecti" +
"on);\r\n            this.onSync();\r\n          }\r\n        }\r\n      },\r\n\r\n      onAd" +
"dExecClick: function () {\r\n        var rec = new EnvoiExec({ Date1: Ext.Date.cle" +
"arTime(new Date(), false), EnvoiID: this.getView().getSelectionModel().getSelect" +
"ion()[0].data.id, TypeInf: this.getView().getSelectionModel().getSelection()[0]." +
"data.TypeInf });\r\n        var gr = this.up(\'tabpanel\').down(\'#tcJourRi\').down(\'g" +
"rid\');\r\n        if (!gr.wini)\r\n          gr.onCreateWin();\r\n        gr.wini.setT" +
"itle(\'Добавить\');\r\n        gr.wini.setActiveRecord(rec);\r\n        gr.wini.show(t" +
"his);\r\n      }\r\n\r\n    });\r\n\r\n    Ext.define(\'EnvoiExec.Grid\', {\r\n      extend: \'" +
"Ext.grid.Panel\',\r\n      alias: \'widget.envoiexecgrid\',\r\n      initComponent: fun" +
"ction () {\r\n        Ext.apply(this, {\r\n          wini: null,\r\n          defaultT" +
"ype: \'textfield\',\r\n          invalidateScrollerOnRefresh: false,\r\n          layo" +
"utConfig: { labelSeparator: \'\' },\r\n          viewConfig: {\r\n            enableTe" +
"xtSelection: true,\r\n            getRowClass: function (record) {\r\n              " +
"if (!record.get(\'IsEnabled\') || record.get(\'Date2\') != null)\r\n                re" +
"turn \'gray-row\';\r\n            }\r\n          },\r\n          columns: [{\r\n          " +
"  header: \'Дата, не позднее\',\r\n            xtype: \'datecolumn\',\r\n            for" +
"mat: \'d.m.Y\',\r\n            dataIndex: \'Date1\',\r\n            width: 80\r\n         " +
" }, {\r\n            header: \'Дата факт. направ.\',\r\n            xtype: \'datecolumn" +
"\',\r\n            format: \'d.m.Y\',\r\n            dataIndex: \'Date2\',\r\n            w" +
"idth: 80\r\n          }, {\r\n            header: \'Вид отчетности\',\r\n            dat" +
"aIndex: \'TypeInf\',\r\n            //width: 200,\r\n            flex: 1,\r\n           " +
" tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Основание\',\r\n         " +
"   dataIndex: \'Osnovan\',\r\n            width: 120,\r\n            tdCls: \'wrap-text" +
"\'\r\n          }, {\r\n            header: \'Место предоставления\',\r\n            data" +
"Index: \'Mesto\',\r\n            width: 100,\r\n            tdCls: \'wrap-text\'\r\n      " +
"    }, {\r\n            header: \'Порядок предоставления\',\r\n            dataIndex: " +
"\'PoryadPredst\',\r\n            width: 90,\r\n            tdCls: \'wrap-text\'\r\n       " +
"   }, {\r\n            header: \'Периодичность\',\r\n            dataIndex: \'Periodich" +
"\',\r\n            width: 90,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n    " +
"        header: \'Срок направления\',\r\n            dataIndex: \'SrokRask\',\r\n       " +
"     width: 150,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            he" +
"ader: \'Список получателей\',\r\n            dataIndex: \'EmailTo\',\r\n            widt" +
"h: 140,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Сп" +
"исок получателей в копии\',\r\n            dataIndex: \'EmailCc\',\r\n            width" +
": 140,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'id\'" +
",\r\n            dataIndex: \'id\',\r\n            width: 30,\r\n            hidden: tru" +
"e\r\n          }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r\n    " +
"        dock: \'top\',\r\n            items: [{\r\n              xtype: \'tbtext\', text" +
": \' Период: \'\r\n            }, {\r\n              xtype: \'datefield\',\r\n            " +
"  itemId: \'d1\',\r\n              allowBlank: false,\r\n              format: \'d.m.Y\'" +
",\r\n              vtype: \'daterange\',\r\n              endDateField: \'d2\',\r\n       " +
"       startDay: 1,\r\n              value: Ext.Date.add(Ext.Date.clearTime(new Da" +
"te(), false), Ext.Date.DAY, -Ext.Date.getDayOfYear(new Date())),\r\n              " +
"width: 100\r\n            }, \' \', {\r\n              xtype: \'datefield\',\r\n          " +
"    itemId: \'d2\',\r\n              allowBlank: false,\r\n              format: \'d.m." +
"Y\',\r\n              vtype: \'daterange\',\r\n              startDateField: \'d1\',\r\n   " +
"           startDay: 1,\r\n              value: Ext.Date.add(Ext.Date.add(Ext.Date" +
".clearTime(new Date(), false), Ext.Date.YEAR, 1), Ext.Date.DAY, -Ext.Date.getDay" +
"OfYear(Ext.Date.add(Ext.Date.clearTime(new Date(), false), Ext.Date.YEAR, 1))),\r" +
"\n              width: 100,\r\n              margin: \'0 5 0 0\'\r\n            }, \' Не" +
" исполнено: \', {\r\n              xtype: \'checkbox\',\r\n              itemId: \'cbIsE" +
"xec\'\r\n            }, {\r\n              iconCls: \'icon-refresh\',\r\n              te" +
"xt: \'Обновить\',\r\n              scope: this,\r\n              handler: this.onRefre" +
"shClick\r\n            }, {\r\n              text: \'Изменить\',\r\n              disabl" +
"ed: true,\r\n              itemId: \'change\',\r\n              scope: this,\r\n        " +
"      handler: this.onChangeClick\r\n            }, {\r\n              iconCls: \'ico" +
"n-delete\',\r\n              text: \'Удалить\',\r\n              disabled: true,\r\n     " +
"         itemId: \'delete\',\r\n              scope: this,\r\n              handler: t" +
"his.onDeleteClick\r\n            }, {\r\n              text: \'Отправить\',\r\n         " +
"     itemId: \'sendEmail\',\r\n              scope: this,\r\n              handler: th" +
"is.onSendEmailClick\r\n            }, {\r\n              xtype: \'exporterbutton\',\r\n " +
"             text: \'Экспорт\',\r\n              action: \'");

            
            #line 1842 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'ar.xml'
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 1855 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("envoiExecCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            success: function (response) {\r\n    " +
"          var text = response.responseText;\r\n              alert(\'Выполнено.\');\r" +
"\n            },\r\n            failure: function (response) {\r\n              var t" +
"ext = response.responseText;\r\n              alert(\'Ошибка!\');\r\n            }\r\n  " +
"        });\r\n        }\r\n      },\r\n\r\n      onRefreshClick: function () {\r\n       " +
" var me = this;\r\n        me.store.proxy.extraParams = { d1: me.down(\'#d1\').getVa" +
"lue(), d2: me.down(\'#d2\').getValue(), TypeID: this.up(\'panel\').TypeID, IsExec: m" +
"e.down(\'#cbIsExec\').getValue() };\r\n        me.store.load();\r\n      },\r\n\r\n      o" +
"nCreateWin: function () {\r\n        this.wini = Ext.create(\'EnvoiExec.Win\', {\r\n  " +
"        scope: this,\r\n          listeners: {\r\n            scope: this,\r\n        " +
"    create: function (form, data) {\r\n              this.store.insert(0, data);\r\n" +
"              this.store.sync();\r\n            },\r\n            update: function (" +
") {\r\n              this.store.sync();\r\n            }\r\n          }\r\n        });\r\n" +
"      },\r\n\r\n      onAddClick: function () {\r\n        var rec = new EnvoiExec({ D" +
"ate1: Ext.Date.clearTime(new Date(), false) });\r\n        if (!this.wini) {\r\n    " +
"      this.onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Добавить\');\r\n " +
"       this.wini.setActiveRecord(rec);\r\n        this.wini.show(this);\r\n      },\r" +
"\n\r\n      onChangeClick: function () {\r\n        if (!this.wini) {\r\n          this" +
".onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Изменить\');\r\n        thi" +
"s.wini.setActiveRecord(this.getSelectionModel().getSelection()[0]);\r\n        thi" +
"s.wini.show(this);\r\n      },\r\n\r\n      onSelectChange: function (selModel, select" +
"ions) {\r\n        this.down(\'#delete\').setDisabled(selections.length === 0);\r\n   " +
"     this.down(\'#change\').setDisabled(selections.length === 0);\r\n      },\r\n\r\n   " +
"   onRowDblClick: function () {\r\n        this.onChangeClick();\r\n      },\r\n\r\n    " +
"  onSync: function () {\r\n        this.store.sync();\r\n      },\r\n\r\n      onDeleteC" +
"lick: function () {\r\n        var selection = this.getView().getSelectionModel()." +
"getSelection()[0];\r\n        if (selection) {\r\n          if (window.confirm(\'Удал" +
"ить стр.?\')) {\r\n            this.store.remove(selection);\r\n            this.onSy" +
"nc();\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    Ext.define(\'EnvoiExecRi" +
".Grid\', {\r\n      extend: \'Ext.grid.Panel\',\r\n      alias: \'widget.envoiexecrigrid" +
"\',\r\n      initComponent: function () {\r\n        Ext.apply(this, {\r\n          win" +
"i: null,\r\n          defaultType: \'textfield\',\r\n          invalidateScrollerOnRef" +
"resh: false,\r\n          layoutConfig: { labelSeparator: \'\' },\r\n          viewCon" +
"fig: {\r\n            enableTextSelection: true,\r\n            getRowClass: functio" +
"n (record) {\r\n              if (!record.get(\'IsEnabled\') || record.get(\'Date2\') " +
"!= null)\r\n                return \'gray-row\';\r\n            }\r\n          },\r\n     " +
"     columns: [{\r\n            header: \'Дата, не позднее\',\r\n            xtype: \'d" +
"atecolumn\',\r\n            format: \'d.m.Y\',\r\n            dataIndex: \'Date1\',\r\n    " +
"        width: 80\r\n          }, {\r\n            header: \'Дата факт. раскрытия\',\r\n" +
"            xtype: \'datecolumn\',\r\n            format: \'d.m.Y\',\r\n            data" +
"Index: \'Date2\',\r\n            width: 80\r\n          }, {\r\n            header: \'Вид" +
" раскрываемой информации\',\r\n            dataIndex: \'TypeInf\',\r\n            flex:" +
" 1,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Основа" +
"ние\',\r\n            dataIndex: \'Osnovan\',\r\n            width: 400,\r\n            t" +
"dCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Периодичность\',\r\n       " +
"     dataIndex: \'Periodich\',\r\n            width: 90,\r\n            tdCls: \'wrap-t" +
"ext\'\r\n          }, {\r\n            header: \'Срок раскрытия\',\r\n            dataInd" +
"ex: \'SrokRask\',\r\n            width: 150,\r\n            tdCls: \'wrap-text\'\r\n      " +
"    }, {\r\n            header: \'ОЛ за представление инфо-и\',\r\n            dataInd" +
"ex: \'EmailTo\',\r\n            width: 140,\r\n            tdCls: \'wrap-text\'\r\n       " +
"   }, {\r\n            header: \'ОЛ за раскрытие инфо-и\',\r\n            dataIndex: \'" +
"EmailCc\',\r\n            width: 140,\r\n            tdCls: \'wrap-text\'\r\n          }," +
" {\r\n            header: \'id\',\r\n            dataIndex: \'id\',\r\n            width: " +
"30,\r\n            hidden: true\r\n          }],\r\n          dockedItems: [{\r\n       " +
"     xtype: \'toolbar\',\r\n            dock: \'top\',\r\n            items: [{\r\n       " +
"       xtype: \'tbtext\', text: \' Период: \'\r\n            }, {\r\n              xtype" +
": \'datefield\',\r\n              itemId: \'d1\',\r\n              allowBlank: false,\r\n " +
"             format: \'d.m.Y\',\r\n              vtype: \'daterange\',\r\n              " +
"endDateField: \'d2\',\r\n              startDay: 1,\r\n              value: Ext.Date.a" +
"dd(Ext.Date.clearTime(new Date(), false), Ext.Date.DAY, -Ext.Date.getDayOfYear(n" +
"ew Date())),\r\n              width: 100\r\n            }, \' \', {\r\n              xty" +
"pe: \'datefield\',\r\n              itemId: \'d2\',\r\n              allowBlank: false,\r" +
"\n              format: \'d.m.Y\',\r\n              vtype: \'daterange\',\r\n            " +
"  startDateField: \'d1\',\r\n              startDay: 1,\r\n              value: Ext.Da" +
"te.add(Ext.Date.add(Ext.Date.clearTime(new Date(), false), Ext.Date.YEAR, 1), Ex" +
"t.Date.DAY, -Ext.Date.getDayOfYear(Ext.Date.add(Ext.Date.clearTime(new Date(), f" +
"alse), Ext.Date.YEAR, 1))),\r\n              width: 100,\r\n              margin: \'0" +
" 5 0 0\'\r\n            }, \' Не исполнено: \', {\r\n              xtype: \'checkbox\',\r\n" +
"              itemId: \'cbIsExec\'\r\n            }, {\r\n              iconCls: \'icon" +
"-refresh\',\r\n              text: \'Обновить\',\r\n              scope: this,\r\n       " +
"       handler: this.onRefreshClick\r\n            }, {\r\n              text: \'Изме" +
"нить\',\r\n              disabled: true,\r\n              itemId: \'change\',\r\n        " +
"      scope: this,\r\n              handler: this.onChangeClick\r\n            }, {\r" +
"\n              iconCls: \'icon-delete\',\r\n              text: \'Удалить\',\r\n        " +
"      disabled: true,\r\n              itemId: \'delete\',\r\n              scope: thi" +
"s,\r\n              handler: this.onDeleteClick\r\n            }, {\r\n              t" +
"ext: \'Отправить\',\r\n              itemId: \'sendEmail\',\r\n              scope: this" +
",\r\n              handler: this.onSendEmailClick\r\n            }, {\r\n             " +
" xtype: \'exporterbutton\',\r\n              text: \'Экспорт\',\r\n              action:" +
" \'");

            
            #line 2054 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'ar.xml'
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 2067 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("envoiExecRiCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            success: function (response) {\r\n    " +
"          var text = response.responseText;\r\n              alert(\'Выполнено.\');\r" +
"\n            },\r\n            failure: function (response) {\r\n              var t" +
"ext = response.responseText;\r\n              alert(\'Ошибка!\');\r\n            }\r\n  " +
"        });\r\n        }\r\n      },\r\n\r\n      onRefreshClick: function () {\r\n       " +
" var me = this;\r\n        me.store.proxy.extraParams = { d1: me.down(\'#d1\').getVa" +
"lue(), d2: me.down(\'#d2\').getValue(), TypeID: this.up(\'panel\').TypeID, IsExec: m" +
"e.down(\'#cbIsExec\').getValue() };\r\n        me.store.load();\r\n      },\r\n\r\n      o" +
"nCreateWin: function () {\r\n        this.wini = Ext.create(\'EnvoiExec.Win\', {\r\n  " +
"        scope: this,\r\n          listeners: {\r\n            scope: this,\r\n        " +
"    create: function (form, data) {\r\n              this.store.insert(0, data);\r\n" +
"              this.store.sync();\r\n            },\r\n            update: function (" +
") {\r\n              this.store.sync();\r\n            }\r\n          }\r\n        });\r\n" +
"      },\r\n\r\n      onAddClick: function () {\r\n        var rec = new EnvoiExec({ D" +
"ate1: Ext.Date.clearTime(new Date(), false) });\r\n        if (!this.wini) {\r\n    " +
"      this.onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Добавить\');\r\n " +
"       this.wini.setActiveRecord(rec);\r\n        this.wini.show(this);\r\n      },\r" +
"\n\r\n      onChangeClick: function () {\r\n        if (!this.wini) {\r\n          this" +
".onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Изменить\');\r\n        thi" +
"s.wini.setActiveRecord(this.getSelectionModel().getSelection()[0]);\r\n        thi" +
"s.wini.show(this);\r\n      },\r\n\r\n      onSelectChange: function (selModel, select" +
"ions) {\r\n        this.down(\'#delete\').setDisabled(selections.length === 0);\r\n   " +
"     this.down(\'#change\').setDisabled(selections.length === 0);\r\n      },\r\n\r\n   " +
"   onRowDblClick: function () {\r\n        this.onChangeClick();\r\n      },\r\n\r\n    " +
"  onSync: function () {\r\n        this.store.sync();\r\n      },\r\n\r\n      onDeleteC" +
"lick: function () {\r\n        var selection = this.getView().getSelectionModel()." +
"getSelection()[0];\r\n        if (selection) {\r\n          if (window.confirm(\'Удал" +
"ить стр.?\')) {\r\n            this.store.remove(selection);\r\n            this.onSy" +
"nc();\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    Ext.define(\'Horraire.Gr" +
"id\', {\r\n      extend: \'Ext.grid.Panel\',\r\n      alias: \'widget.horrairegrid\',\r\n  " +
"    initComponent: function () {\r\n        Ext.apply(this, {\r\n          wini: nul" +
"l,\r\n          title: \'Расписание\',\r\n          defaultType: \'textfield\',\r\n       " +
"   layoutConfig: { labelSeparator: \'\' },\r\n          viewConfig: {\r\n            e" +
"nableTextSelection: true\r\n          },\r\n          columns: [{\r\n            heade" +
"r: \'Тип\',\r\n            dataIndex: \'EnvoiHoraireType\',\r\n            flex: 1,\r\n   " +
"         tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Вид\',\r\n       " +
"     dataIndex: \'Mode\',\r\n            flex: 2,\r\n            tdCls: \'wrap-text\'\r\n " +
"         }, {\r\n            header: \'Примечание\',\r\n            dataIndex: \'Commen" +
"t\',\r\n            flex: 3,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n     " +
"       header: \'День\',\r\n            dataIndex: \'Day\',\r\n            width: 50,\r\n " +
"           tdCls: \'wrap-text\',\r\n            hidden: false\r\n          }, {\r\n     " +
"       header: \'Месяц\',\r\n            dataIndex: \'Month\',\r\n            width: 50," +
"\r\n            tdCls: \'wrap-text\',\r\n            hidden: false\r\n          }, {\r\n  " +
"          header: \'ConseilID\',\r\n            dataIndex: \'ConseilID\',\r\n           " +
" width: 30,\r\n            tdCls: \'wrap-text\',\r\n            hidden: true\r\n        " +
"  }, {\r\n            header: \'EnvoiID\',\r\n            dataIndex: \'EnvoiID\',\r\n     " +
"       width: 30,\r\n            tdCls: \'wrap-text\',\r\n            hidden: true\r\n  " +
"        }, {\r\n            header: \'RiskMapID\',\r\n            dataIndex: \'RiskMapI" +
"D\',\r\n            width: 30,\r\n            tdCls: \'wrap-text\',\r\n            hidden" +
": true\r\n          }, {\r\n            header: \'ID\',\r\n            dataIndex: \'id\',\r" +
"\n            width: 30,\r\n            tdCls: \'wrap-text\',\r\n            hidden: tr" +
"ue\r\n          }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r\n   " +
"         dock: \'top\',\r\n            items: [{\r\n              iconCls: \'icon-add\'," +
"\r\n              text: \'Добавить\',\r\n              disabled: true,\r\n              " +
"itemId: \'create\',\r\n              scope: this,\r\n              handler: this.onAdd" +
"Click\r\n            }, {\r\n              text: \'Изменить\',\r\n              disabled" +
": true,\r\n              itemId: \'change\',\r\n              scope: this,\r\n          " +
"    handler: this.onChangeClick\r\n            }, {\r\n              iconCls: \'icon-" +
"delete\',\r\n              text: \'Удалить\',\r\n              disabled: true,\r\n       " +
"       itemId: \'delete\',\r\n              scope: this,\r\n              handler: thi" +
"s.onDeleteClick\r\n            }]\r\n          }]\r\n        })\r\n        this.callPare" +
"nt();\r\n        this.getSelectionModel().on(\'selectionchange\', this.onSelectChang" +
"e, this);\r\n        this.on(\'itemdblclick\', this.onRowDblClick, this);\r\n      },\r" +
"\n\r\n      onRefreshClick: function () {\r\n        this.store.proxy.extraParams = {" +
" isAuto: this.up(\'panel\').tag == 1 };\r\n        this.store.load();\r\n      },\r\n\r\n " +
"     onCreateWin: function () {\r\n        this.wini = Ext.create(\'Horraire.Win\', " +
"{\r\n          scope: this,\r\n          listeners: {\r\n            scope: this,\r\n   " +
"         create: function (form, data) {\r\n              this.store.insert(0, dat" +
"a);\r\n              this.store.sync();\r\n            },\r\n            update: funct" +
"ion () {\r\n              this.store.sync();\r\n            }\r\n          }\r\n        " +
"});\r\n      },\r\n\r\n      onAddClick: function () {\r\n        var rec;\r\n        if (" +
"this.store.storeId == \'storeConseilHoraire\')\r\n          rec = new ConseilHoraire" +
"({ ConseilID: this.store.proxy.extraParams.id, EnvoiHoraireTypeID: 1 });\r\n      " +
"  else if (this.store.storeId == \'storeRiskMapHoraire\')\r\n          rec = new Ris" +
"kMapHoraire({ RiskMapID: this.store.proxy.extraParams.id, EnvoiHoraireTypeID: 1 " +
"});\r\n        else\r\n          rec = new EnvoiHoraire({ EnvoiID: this.store.proxy." +
"extraParams.id, EnvoiHoraireTypeID: 1 });\r\n        if (!this.wini) {\r\n          " +
"this.onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Добавить\');\r\n       " +
" this.wini.setActiveRecord(rec);\r\n        this.wini.show(this);\r\n      },\r\n\r\n   " +
"   onChangeClick: function () {\r\n        if (!this.wini) {\r\n          this.onCre" +
"ateWin();\r\n        }\r\n        this.wini.setTitle(\'Изменить\');\r\n        this.wini" +
".setActiveRecord(this.getSelectionModel().getSelection()[0]);\r\n        this.wini" +
".show(this);\r\n      },\r\n\r\n      onSelectChange: function (selModel, selections) " +
"{\r\n        this.down(\'#delete\').setDisabled(selections.length === 0);\r\n        t" +
"his.down(\'#change\').setDisabled(selections.length === 0);\r\n      },\r\n\r\n      onR" +
"owDblClick: function () {\r\n        this.onChangeClick();\r\n      },\r\n\r\n      onSy" +
"nc: function () {\r\n        this.store.sync();\r\n      },\r\n\r\n      onDeleteClick: " +
"function () {\r\n        var selection = this.getView().getSelectionModel().getSel" +
"ection()[0];\r\n        if (selection) {\r\n          if (window.confirm(\'Удалить ст" +
"р.?\')) {\r\n            this.store.remove(selection);\r\n            this.onSync();\r" +
"\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    Ext.define(\'Conseil.Win\', {\r\n  " +
"    extend: \'Ext.window.Window\',\r\n      alias: \'widget.conseilwin\',\r\n\r\n      ini" +
"tComponent: function () {\r\n        this.addEvents(\'create\');\r\n        this.addEv" +
"ents(\'update\');\r\n        Ext.apply(this, {\r\n          width: 600,\r\n          clo" +
"seAction: \'hide\',\r\n          modal: true,\r\n          buttonAlign: \'center\',\r\n   " +
"       items: [{\r\n            xtype: \'tabpanel\',\r\n            itemId: \'tp\',\r\n   " +
"         anchor: \'100%\',\r\n            //plain: false,\r\n            border: false" +
",\r\n            //flex: 1,\r\n            height: 580,\r\n            border: false,\r" +
"\n            items: [{\r\n              xtype: \'form\',\r\n              tag: 0,\r\n   " +
"           title: \'Параметры\',\r\n              bodyPadding: 10,\r\n              ac" +
"tiveRecord: null,\r\n              border: false,\r\n              defaultType: \'tex" +
"tfield\',\r\n              defaults: { anchor: \'100%\' },\r\n              layout: \'an" +
"chor\',\r\n              fieldDefaults: {\r\n                labelAlign: \'top\',\r\n    " +
"            msgTarget: \'side\'\r\n              },\r\n              items: [{\r\n      " +
"          xtype: \'textareafield\',\r\n                grow: true,\r\n                " +
"growMin: 50,\r\n                growMax: 120,\r\n                name: \'Violation\',\r" +
"\n                fieldLabel: \'Содержание недостатка/нарушения\'\r\n              }," +
" {\r\n                xtype: \'textareafield\',\r\n                grow: true,\r\n      " +
"          growMin: 50,\r\n                growMax: 120,\r\n                name: \'Co" +
"nseil\',\r\n                fieldLabel: \'Рекомендация\'\r\n              }, {\r\n       " +
"         xtype: \'fieldcontainer\',\r\n                layout: \'hbox\',\r\n            " +
"    items: [{\r\n                  xtype: \'datefield\',\r\n                  format: " +
"\'d.m.Y\',\r\n                  flex: 1,\r\n                  name: \'PrononceDate\',\r\n " +
"                 fieldLabel: \'Дата вынесение\',\r\n                  margin: \'0 15 " +
"0 0\'\r\n                }, {\r\n                  xtype: \'datefield\',\r\n             " +
"     flex: 1,\r\n                  format: \'d.m.Y\',\r\n                  name: \'Term" +
"e\',\r\n                  fieldLabel: \'Срок выполнения\',\r\n                  margin:" +
" \'0 15 0 0\'\r\n                }, {\r\n                  xtype: \'datefield\',\r\n      " +
"            format: \'d.m.Y\',\r\n                  flex: 1,\r\n                  name" +
": \'Prolongation\',\r\n                  fieldLabel: \'Продление\',\r\n                 " +
" margin: \'0 15 0 0\'\r\n                }, {\r\n                  xtype: \'datefield\'," +
"\r\n                  flex: 1,\r\n                  format: \'d.m.Y\',\r\n              " +
"    name: \'ExecDate\',\r\n                  fieldLabel: \'Дата выполнения\'\r\n        " +
"        }]\r\n              }, {\r\n                name: \'Priorite\',\r\n             " +
"   fieldLabel: \'Приоритетность\',\r\n                xtype: \'combo\',\r\n             " +
"   store: \'storeCPriorite\',\r\n                displayField: \'Text\',\r\n            " +
"    valueField: \'Value\',\r\n                typeAhead: true,\r\n                quer" +
"yMode: \'local\',\r\n                emptyText: \'*\',\r\n                selectOnFocus:" +
" true\r\n              }, {\r\n                name: \'Possesseur\',\r\n                " +
"fieldLabel: \'Владелец\'\r\n              }, {\r\n                name: \'Commentaire\'," +
"\r\n                fieldLabel: \'Комментарии\'\r\n              }, {\r\n               " +
" xtype: \'fieldcontainer\',\r\n                layout: \'hbox\',\r\n                item" +
"s: [{\r\n                  xtype: \'customnumber\',\r\n                  name: \'MinNom" +
"RiskPrice\',\r\n                  fieldLabel: \'Мин. номинальная стоимость риска\',\r\n" +
"                  allowDecimals: false,\r\n                  decimalPrecision: 0,\r" +
"\n                  anchor: \'50%\',\r\n                  hideTrigger: true,\r\n       " +
"           keyNavEnabled: false,\r\n                  mouseWheelEnabled: false,\r\n " +
"                 autoStripChars: true,\r\n                  margin: \'0 15 0 0\'\r\n  " +
"              }, {\r\n                  xtype: \'customnumber\',\r\n                  " +
"name: \'MaxNomRiskPrice\',\r\n                  fieldLabel: \'Макс. номинальная стоим" +
"ость риска\',\r\n                  allowDecimals: false,\r\n                  decimal" +
"Precision: 0,\r\n                  anchor: \'50%\',\r\n                  hideTrigger: " +
"true,\r\n                  keyNavEnabled: false,\r\n                  mouseWheelEnab" +
"led: false,\r\n                  autoStripChars: true,\r\n                  margin: " +
"\'0 15 0 0\'\r\n                }, {\r\n                  xtype: \'checkboxfield\',\r\n   " +
"               name: \'IsEnabled\',\r\n                  fieldLabel: \'Активна\',\r\n   " +
"               labelAlign: \'right\'\r\n                }]\r\n              }, {\r\n    " +
"            itemId: \'EmailTo\',\r\n                name: \'EmailTo\',\r\n              " +
"  xtype: \'hidden\'\r\n              }, {\r\n                itemId: \'EmailCc\',\r\n     " +
"           name: \'EmailCc\',\r\n                xtype: \'hidden\'\r\n              }]\r\n" +
"            }, {\r\n              tag: 1,\r\n              title: \'Адресаты\',\r\n     " +
"         layout: \'anchor\',\r\n              defaults: { anchor: \'100%\' },\r\n       " +
"       border: false,\r\n              items: [{\r\n                xtype: \'grid\',\r\n" +
"                border: false,\r\n                itemId: \'gTo\',\r\n                " +
"anchor: \'100% 50%\',\r\n                title: \'Кому\',\r\n                store: stor" +
"eEMailTo,\r\n                columns: [{\r\n                  xtype: \'checkcolumn\',\r" +
"\n                  dataIndex: \'ui\',\r\n                  width: 30\r\n              " +
"  }, {\r\n                  header: \"Имя\",\r\n                  dataIndex: \'name\',\r\n" +
"                  width: 240\r\n                }, {\r\n                  header: \"E" +
"Mail\",\r\n                  dataIndex: \'email\',\r\n                  flex: 1\r\n      " +
"          }]\r\n              }, {\r\n                xtype: \'grid\',\r\n              " +
"  border: false,\r\n                itemId: \'gCc\',\r\n                anchor: \'100% " +
"50%\',\r\n                title: \'Копия\',\r\n                store: storeEMailCc,\r\n  " +
"              columns: [{\r\n                  xtype: \'checkcolumn\',\r\n            " +
"      dataIndex: \'ui\',\r\n                  width: 30\r\n                }, {\r\n     " +
"             header: \"Имя\",\r\n                  dataIndex: \'name\',\r\n             " +
"     width: 240\r\n                }, {\r\n                  header: \"EMail\",\r\n     " +
"             dataIndex: \'email\',\r\n                  flex: 1\r\n                }]\r" +
"\n              }]\r\n            }]\r\n          }],\r\n          dockedItems: [{\r\n   " +
"         xtype: \'toolbar\',\r\n            dock: \'bottom\',\r\n            ui: \'footer" +
"\',\r\n            items: [\'->\', {\r\n              iconCls: \'icon-save\',\r\n          " +
"    itemId: \'save\',\r\n              text: \'Сохранить\',\r\n              disabled: t" +
"rue,\r\n              scope: this,\r\n              handler: this.onSave\r\n          " +
"  }, {\r\n              //iconCls: \'icon-cancel\',\r\n              text: \'Отмена\',\r\n" +
"              scope: this,\r\n              handler: this.onCancel\r\n            }]" +
"\r\n          }]\r\n        });\r\n        this.callParent();\r\n      },\r\n\r\n      setAc" +
"tiveRecord: function (record) {\r\n        this.activeRecord = record;\r\n        if" +
" (record) {\r\n          this.down(\'#save\').enable();\r\n          this.down(\'form\')" +
".getForm().loadRecord(record);\r\n        } else {\r\n          this.down(\'#save\').d" +
"isable();\r\n          this.down(\'form\').getForm().reset();\r\n        }\r\n        va" +
"r re = /\\s*,\\s*/\r\n        var to = (record.data.EmailTo == null ? \'\' : record.da" +
"ta.EmailTo).split(re);\r\n        var cc = (record.data.EmailCc == null ? \'\' : rec" +
"ord.data.EmailCc).split(re);\r\n        storeEMailTo.removeAll();\r\n        storeEM" +
"ailCc.removeAll();\r\n        storeEMail.each(function (r, i) {\r\n          storeEM" +
"ailTo.add({ id: r.data.id, name: r.data.name, email: r.data.email, ui: Ext.Array" +
".contains(to, r.data.email) });\r\n          storeEMailCc.add({ id: r.data.id, nam" +
"e: r.data.name, email: r.data.email, ui: Ext.Array.contains(cc, r.data.email) })" +
";\r\n        });\r\n        this.down(\'#gTo\').reconfigure(storeEMailTo);\r\n        th" +
"is.down(\'#gCc\').reconfigure(storeEMailCc);\r\n        this.down(\'tabpanel\').setAct" +
"iveTab(0);\r\n      },\r\n\r\n      onSave: function () {\r\n        var active = this.a" +
"ctiveRecord, form = this.down(\'form\').getForm();\r\n        if (!active) {\r\n      " +
"    return;\r\n        }\r\n        var s = \'\', f = true;\r\n        storeEMailTo.each" +
"(function (r, i) {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', \' : \'\'" +
") + r.data.email;\r\n            if (f) f = false;\r\n          }\r\n        });\r\n    " +
"    this.down(\'#EmailTo\').setValue(s);\r\n        s = \'\';\r\n        f = true;\r\n    " +
"    storeEMailCc.each(function (r, i) {\r\n          if (r.data.ui) {\r\n           " +
" s += (!f ? \', \' : \'\') + r.data.email;\r\n            if (f) f = false;\r\n         " +
" }\r\n        });\r\n        this.down(\'#EmailCc\').setValue(s);\r\n        if (form.is" +
"Valid()) {\r\n          if (this.title == \'Добавить\')\r\n            this.fireEvent(" +
"\'create\', this, form.getValues(false, false, false, true));\r\n          else {\r\n " +
"           form.updateRecord(active);\r\n            this.fireEvent(\'update\');\r\n  " +
"        }\r\n          this.hide();\r\n        }\r\n      },\r\n\r\n      onCancel: functi" +
"on () {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    Ext.define(\'Conseil.Grid\'" +
", {\r\n      extend: \'Ext.grid.Panel\',\r\n      alias: \'widget.conseilgrid\',\r\n      " +
"initComponent: function () {\r\n        Ext.apply(this, {\r\n          wini: null,\r\n" +
"          defaultType: \'textfield\',\r\n          invalidateScrollerOnRefresh: fals" +
"e,\r\n          layoutConfig: { labelSeparator: \'\' },\r\n          viewConfig: {\r\n  " +
"          enableTextSelection: true,\r\n            getRowClass: function (record)" +
" {\r\n              if (!record.get(\'IsEnabled\'))\r\n                return \'gray-ro" +
"w\';\r\n            }\r\n          },\r\n          columns: [{\r\n            header: \'Со" +
"держание недостатка/нарушения\',\r\n            dataIndex: \'Violation\',\r\n          " +
"  //width: 200,\r\n            flex: 1,\r\n            tdCls: \'wrap-text\'\r\n         " +
" }, {\r\n            header: \'Рекомендация\',\r\n            dataIndex: \'Conseil\',\r\n " +
"           flex: 1,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n           " +
" header: \'Приоритетность\',\r\n            dataIndex: \'PrioriteNom\',\r\n            w" +
"idth: 100,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: " +
"\'Мин. номинальная стоимость риска\',\r\n            dataIndex: \'MinNomRiskPrice\',\r\n" +
"            width: 100,\r\n            tdCls: \'wrap-text\',\r\n            align: \'ri" +
"ght\'\r\n          }, {\r\n            header: \'Макс. номинальная стоимость риска\',\r\n" +
"            dataIndex: \'MaxNomRiskPrice\',\r\n            xtype: \'\',\r\n            w" +
"idth: 100,\r\n            tdCls: \'wrap-text\',\r\n            align: \'right\'\r\n       " +
"   }, {\r\n            header: \'Дата вынесения\',\r\n            dataIndex: \'Prononce" +
"Date\',\r\n            width: 70,\r\n            xtype: \'datecolumn\',\r\n            fo" +
"rmat: \'d.m.Y\'\r\n          }, {\r\n            header: \'Срок выполнения\',\r\n         " +
"   dataIndex: \'Terme\',\r\n            width: 70,\r\n            xtype: \'datecolumn\'," +
"\r\n            renderer: function (val) {\r\n              return \'<span style=\"col" +
"or:\' + (val >= Ext.Date.clearTime(new Date(), false) ? \'#73b51e\' : \'#cf4c35\') + " +
"\';\">\' + Ext.util.Format.dateRenderer(\'d.m.Y\')(val) + \'</span>\';\r\n            }\r\n" +
"          }, {\r\n            header: \'Продление\',\r\n            dataIndex: \'Prolon" +
"gation\',\r\n            width: 70,\r\n            xtype: \'datecolumn\',\r\n            " +
"renderer: function (val) {\r\n              return \'<span style=\"color:\' + (val >=" +
" Ext.Date.clearTime(new Date(), false) ? \'#73b51e\' : \'#cf4c35\') + \';\">\' + Ext.ut" +
"il.Format.dateRenderer(\'d.m.Y\')(val) + \'</span>\';\r\n            }\r\n          }, {" +
"\r\n            header: \'Дата выполнения\',\r\n            dataIndex: \'ExecDate\',\r\n  " +
"          width: 70,\r\n            xtype: \'datecolumn\',\r\n            format: \'d.m" +
".Y\'\r\n          }, {\r\n            header: \'Владелец\',\r\n            dataIndex: \'Po" +
"ssesseur\',\r\n            width: 120,\r\n            tdCls: \'wrap-text\'\r\n          }" +
", {\r\n            header: \'Список получателей\',\r\n            dataIndex: \'EmailTo\'" +
",\r\n            width: 140,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n    " +
"        header: \'Список получателей в копии\',\r\n            dataIndex: \'EmailCc\'," +
"\r\n            width: 140,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n     " +
"       header: \'Комментарии\',\r\n            dataIndex: \'Commentaire\',\r\n          " +
"  width: 90,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header" +
": \'Активна\',\r\n            dataIndex: \'IsEnabled\',\r\n            xtype: \'checkcolu" +
"mn\',\r\n            width: 20\r\n          }, {\r\n            header: \'id\',\r\n        " +
"    dataIndex: \'id\',\r\n            width: 30,\r\n            hidden: true\r\n        " +
"  }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r\n            doc" +
"k: \'top\',\r\n            items: [{\r\n              xtype: \'tbtext\', text: \' Период:" +
" \'\r\n            }, {\r\n              xtype: \'datefield\',\r\n              itemId: \'" +
"d1\',\r\n              allowBlank: false,\r\n              format: \'d.m.Y\',\r\n        " +
"      vtype: \'daterange\',\r\n              endDateField: \'d2\',\r\n              star" +
"tDay: 1,\r\n              value: Ext.Date.add(Ext.Date.clearTime(new Date(), false" +
"), Ext.Date.DAY, -Ext.Date.getDayOfYear(new Date())),\r\n              width: 100\r" +
"\n            }, \' \', {\r\n              xtype: \'datefield\',\r\n              itemId:" +
" \'d2\',\r\n              allowBlank: false,\r\n              format: \'d.m.Y\',\r\n      " +
"        vtype: \'daterange\',\r\n              startDateField: \'d1\',\r\n              " +
"startDay: 1,\r\n              value: Ext.Date.add(Ext.Date.clearTime(new Date(), f" +
"alse), Ext.Date.DAY, 0),\r\n              width: 100,\r\n              margin: \'0 5 " +
"0 0\'\r\n            }, Ext.create(\'Ext.form.field.ComboBox\', {\r\n              item" +
"Id: \'cbType\',\r\n              store: Ext.create(\'Ext.data.Store\', {\r\n            " +
"    fields: [\'id\', \'value\'],\r\n                data: [\r\n                    { id:" +
" 0, value: \'Дата вынесения\' },\r\n                    { id: 1, value: \'Срок выполн" +
"ения\' },\r\n                    { id: 2, value: \'Дата выполнения\' }\r\n             " +
"   ]\r\n              }),\r\n              displayField: \'value\',\r\n              typ" +
"eAhead: true,\r\n              queryMode: \'local\',\r\n              valueField: \'id\'" +
",\r\n              selectOnFocus: true,\r\n              width: 120,\r\n              " +
"listeners: {\r\n                beforerender: function () { this.setValue(0, false" +
"); }\r\n              }\r\n            }), \' Незакрытые: \', {\r\n              xtype: " +
"\'checkbox\',\r\n              checked: true,\r\n              itemId: \'cbOpen\',\r\n    " +
"          scope: this,\r\n              handler: this.onOpenClick\r\n            }, " +
"{\r\n              iconCls: \'icon-add\',\r\n              text: \'Добавить\',\r\n        " +
"      scope: this,\r\n              handler: this.onAddClick\r\n            }, {\r\n  " +
"            text: \'Изменить\',\r\n              disabled: true,\r\n              item" +
"Id: \'change\',\r\n              scope: this,\r\n              handler: this.onChangeC" +
"lick\r\n            }, {\r\n              iconCls: \'icon-refresh\',\r\n              te" +
"xt: \'Обновить\',\r\n              scope: this,\r\n              handler: this.onRefre" +
"shClick\r\n            }, {\r\n              iconCls: \'icon-delete\',\r\n              " +
"text: \'Удалить\',\r\n              disabled: true,\r\n              itemId: \'delete\'," +
"\r\n              scope: this,\r\n              handler: this.onDeleteClick\r\n       " +
"     }, {\r\n              text: \'Отправить\',\r\n              itemId: \'sendEmail\',\r" +
"\n              disabled: true,\r\n              scope: this,\r\n              handle" +
"r: this.onSendEmailClick\r\n            }, {\r\n              xtype: \'exporterbutton" +
"\',\r\n              text: \'Экспорт\',\r\n              action: \'");

            
            #line 2770 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'Рекомендации.xml'
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 2783 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("conseilCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            params: {\r\n              id: this.ge" +
"tView().getSelectionModel().getSelection()[0].data.id\r\n            },\r\n         " +
"   success: function (response) {\r\n              var text = response.responseTex" +
"t;\r\n              alert(\'Выполнено.\');\r\n            },\r\n            failure: fun" +
"ction (response) {\r\n              var text = response.responseText;\r\n           " +
"   alert(\'Ошибка!\');\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n     " +
" onRefreshClick: function () {\r\n        var me = this;\r\n        me.store.proxy.e" +
"xtraParams = { d1: me.down(\'#d1\').getValue(), d2: me.down(\'#d2\').getValue(), typ" +
"e: me.down(\'#cbType\').getValue(), nopen: me.down(\'#cbOpen\').getValue() };\r\n     " +
"   me.store.load();\r\n        var o = me.up(\'panel\').down(\'#horraire\');\r\n        " +
"if (o) o.down(\'#create\').setDisabled(true);\r\n      },\r\n\r\n      onCreateWin: func" +
"tion () {\r\n        this.wini = Ext.create(\'Conseil.Win\', {\r\n          scope: thi" +
"s,\r\n          listeners: {\r\n            scope: this,\r\n            create: functi" +
"on (form, data) {\r\n              this.store.insert(0, data);\r\n              this" +
".store.sync();\r\n            },\r\n            update: function () {\r\n             " +
" this.store.sync();\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n      " +
"onAddClick: function () {\r\n        var rec = new Conseil();\r\n        if (!this.w" +
"ini) {\r\n          this.onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'До" +
"бавить\');\r\n        this.wini.setActiveRecord(rec);\r\n        this.wini.show(this)" +
";\r\n      },\r\n\r\n      onChangeClick: function () {\r\n        if (!this.wini) {\r\n  " +
"        this.onCreateWin();\r\n        }\r\n        this.wini.setTitle(\'Изменить\');\r" +
"\n        this.wini.setActiveRecord(this.getSelectionModel().getSelection()[0]);\r" +
"\n        this.wini.show(this);\r\n      },\r\n\r\n      onSelectChange: function (selM" +
"odel, selections) {\r\n        this.down(\'#delete\').setDisabled(selections.length " +
"=== 0);\r\n        this.down(\'#change\').setDisabled(selections.length === 0);\r\n   " +
"     this.down(\'#sendEmail\').setDisabled(selections.length === 0);\r\n        var " +
"grid = this.up(\'panel\').down(\'#horraire\');\r\n        if (grid) {\r\n          if (s" +
"elections.length === 0)\r\n            grid.down(\'#create\').setDisabled(true);\r\n  " +
"        else {\r\n            grid.store.proxy.extraParams = { id: this.getView()." +
"getSelectionModel().getSelection()[0].data.id };\r\n            grid.store.load();" +
"\r\n            grid.down(\'#create\').setDisabled(false);\r\n          }\r\n        }\r\n" +
"      },\r\n\r\n      onRowDblClick: function () {\r\n        this.onChangeClick();\r\n " +
"     },\r\n\r\n      onSync: function () {\r\n        this.store.sync();\r\n      },\r\n\r\n" +
"      onDeleteClick: function () {\r\n        var selection = this.getView().getSe" +
"lectionModel().getSelection()[0];\r\n        if (selection) {\r\n          if (windo" +
"w.confirm(\'Удалить стр.?\')) {\r\n            this.store.remove(selection);\r\n      " +
"      this.onSync();\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    Ext.defi" +
"ne(\'RiskMap.Win\', {\r\n      extend: \'Ext.window.Window\',\r\n      alias: \'widget.ri" +
"skmapwin\',\r\n\r\n      initComponent: function () {\r\n        this.addEvents(\'create" +
"\');\r\n        this.addEvents(\'update\');\r\n        Ext.apply(this, {\r\n          wid" +
"th: 600,\r\n          closeAction: \'hide\',\r\n          modal: true,\r\n          bord" +
"er: false,\r\n          resizable: false,\r\n          buttonAlign: \'center\',\r\n     " +
"     items: [{\r\n            xtype: \'tabpanel\',\r\n            itemId: \'tp\',\r\n     " +
"       anchor: \'100%\',\r\n            border: false,\r\n            //height: 530,\r\n" +
"            maxHeight: 1000,\r\n            border: false,\r\n            items: [{\r" +
"\n              xtype: \'form\',\r\n              tag: 0,\r\n              title: \'Пара" +
"метры\',\r\n              bodyPadding: 10,\r\n              activeRecord: null,\r\n    " +
"          border: false,\r\n              defaultType: \'textfield\',\r\n             " +
" defaults: { anchor: \'100%\' },\r\n              layout: \'anchor\',\r\n              f" +
"ieldDefaults: {\r\n                labelAlign: \'top\',\r\n                msgTarget: " +
"\'side\',\r\n                labelWidth: 150\r\n              },\r\n              items:" +
" [{\r\n                xtype: \'fieldcontainer\',\r\n                layout: \'hbox\',\r\n" +
"                defaultType: \'textfield\',\r\n                items: [{\r\n          " +
"        name: \'JurPersonne\',\r\n                  fieldLabel: \'Юр. лицо\',\r\n       " +
"           width: \'50%\',\r\n                  margin: \'0 5 0 0\'\r\n                }" +
", {\r\n                  name: \'Dep\',\r\n                  fieldLabel: \'Структурное " +
"подразделение\',\r\n                  width: \'50%\',\r\n                  margin: \'0 0" +
" 0 5\'\r\n                }]\r\n              }, {\r\n                name: \'BisProc\',\r" +
"\n                fieldLabel: \'Бизнес процесс\'\r\n              }, {\r\n             " +
"   name: \'NumRisk\',\r\n                fieldLabel: \'№ Риск\',\r\n                mask" +
"Re: /[\\d]/\r\n              }, {\r\n                xtype: \'textareafield\',\r\n       " +
"         grow: true,\r\n                growMin: 50,\r\n                growMax: 120" +
",\r\n                name: \'RiskName\',\r\n                fieldLabel: \'Риск наименов" +
"ание\'\r\n              }, {\r\n                xtype: \'fieldcontainer\',\r\n           " +
"     layout: \'hbox\',\r\n                items: [{\r\n                  name: \'Influe" +
"nce\',\r\n                  fieldLabel: \'Влияние\',\r\n                  xtype: \'combo" +
"\',\r\n                  store: \'storeRMLevel\',\r\n                  displayField: \'T" +
"ext\',\r\n                  valueField: \'Value\',\r\n                  typeAhead: true" +
",\r\n                  queryMode: \'local\',\r\n                  emptyText: \'*\',\r\n   " +
"               selectOnFocus: true,\r\n                  margin: \'0 5 0 0\',\r\n     " +
"             width: \'33%\'\r\n                }, {\r\n                  name: \'Probab" +
"ilite\',\r\n                  fieldLabel: \'Вероятность\',\r\n                  xtype: " +
"\'combo\',\r\n                  store: \'storeRMLevel\',\r\n                  displayFie" +
"ld: \'Text\',\r\n                  valueField: \'Value\',\r\n                  typeAhead" +
": true,\r\n                  queryMode: \'local\',\r\n                  emptyText: \'*\'" +
",\r\n                  selectOnFocus: true,\r\n                  margin: \'0 5 0 5\',\r" +
"\n                  width: \'33.5%\'\r\n                }, {\r\n                  name:" +
" \'ControlForce\',\r\n                  fieldLabel: \'Сила контроля\',\r\n              " +
"    xtype: \'combo\',\r\n                  store: \'storeRMLevel\',\r\n                 " +
" displayField: \'Text\',\r\n                  valueField: \'Value\',\r\n                " +
"  typeAhead: true,\r\n                  queryMode: \'local\',\r\n                  emp" +
"tyText: \'*\',\r\n                  selectOnFocus: true,\r\n                  margin: " +
"\'0 0 0 5\',\r\n                  width: \'33%\'\r\n                }]\r\n              }," +
" {\r\n                xtype: \'checkboxfield\',\r\n                name: \'EssentielRis" +
"k\',\r\n                fieldLabel: \'Существенный риск\',\r\n                labelAlig" +
"n: \'left\',\r\n                labelWidth: 130\r\n              }, {\r\n               " +
" name: \'But\',\r\n                fieldLabel: \'Цель\'\r\n              }, {\r\n         " +
"       name: \'PossesseurBut\',\r\n                fieldLabel: \'Владелец Цели\'\r\n    " +
"          }, {\r\n                xtype: \'textareafield\',\r\n                grow: t" +
"rue,\r\n                growMin: 50,\r\n                growMax: 120,\r\n             " +
"   name: \'Control\',\r\n                fieldLabel: \'Контроль\'\r\n              }, {\r" +
"\n                name: \'PossesseurControl\',\r\n                fieldLabel: \'Владел" +
"ец контроля\'\r\n              }, {\r\n                xtype: \'checkboxfield\',\r\n     " +
"           name: \'IsEnabled\',\r\n                fieldLabel: \'Активна\',\r\n         " +
"       labelAlign: \'left\',\r\n                labelWidth: 130\r\n              }, {\r" +
"\n                itemId: \'EmailTo\',\r\n                name: \'EmailTo\',\r\n         " +
"       xtype: \'hidden\'\r\n              }, {\r\n                itemId: \'EmailCc\',\r\n" +
"                name: \'EmailCc\',\r\n                xtype: \'hidden\'\r\n             " +
" }]\r\n            }, {\r\n              tag: 1,\r\n              title: \'Адресаты\',\r\n" +
"              layout: \'anchor\',\r\n              defaults: { anchor: \'100%\' },\r\n  " +
"            border: false,\r\n              items: [{\r\n                xtype: \'gri" +
"d\',\r\n                height: 350,\r\n                border: false,\r\n             " +
"   itemId: \'gTo\',\r\n                anchor: \'100% 50%\',\r\n                title: \'" +
"Кому\',\r\n                store: storeEMailTo,\r\n                columns: [{\r\n     " +
"             xtype: \'checkcolumn\',\r\n                  dataIndex: \'ui\',\r\n        " +
"          width: 30\r\n                }, {\r\n                  header: \"Имя\",\r\n   " +
"               dataIndex: \'name\',\r\n                  width: 240\r\n               " +
" }, {\r\n                  header: \"EMail\",\r\n                  dataIndex: \'email\'," +
"\r\n                  flex: 1\r\n                }]\r\n              }, {\r\n           " +
"     xtype: \'grid\',\r\n                height: 350,\r\n                border: false" +
",\r\n                itemId: \'gCc\',\r\n                anchor: \'100% 50%\',\r\n        " +
"        title: \'Копия\',\r\n                store: storeEMailCc,\r\n                c" +
"olumns: [{\r\n                  xtype: \'checkcolumn\',\r\n                  dataIndex" +
": \'ui\',\r\n                  width: 30\r\n                }, {\r\n                  he" +
"ader: \"Имя\",\r\n                  dataIndex: \'name\',\r\n                  width: 240" +
"\r\n                }, {\r\n                  header: \"EMail\",\r\n                  da" +
"taIndex: \'email\',\r\n                  flex: 1\r\n                }]\r\n              " +
"}]\r\n            }]\r\n          }],\r\n          dockedItems: [{\r\n            xtype:" +
" \'toolbar\',\r\n            dock: \'bottom\',\r\n            ui: \'footer\',\r\n           " +
" items: [\'->\', {\r\n              iconCls: \'icon-save\',\r\n              itemId: \'sa" +
"ve\',\r\n              text: \'Сохранить\',\r\n              disabled: true,\r\n         " +
"     scope: this,\r\n              handler: this.onSave\r\n            }, {\r\n       " +
"       //iconCls: \'icon-cancel\',\r\n              text: \'Отмена\',\r\n              s" +
"cope: this,\r\n              handler: this.onCancel\r\n            }]\r\n          }]\r" +
"\n        });\r\n        this.callParent();\r\n      },\r\n\r\n      setActiveRecord: fun" +
"ction (record) {\r\n        this.activeRecord = record;\r\n        if (record) {\r\n  " +
"        this.down(\'#save\').enable();\r\n          this.down(\'form\').getForm().load" +
"Record(record);\r\n        } else {\r\n          this.down(\'#save\').disable();\r\n    " +
"      this.down(\'form\').getForm().reset();\r\n        }\r\n        var re = /\\s*,\\s*" +
"/\r\n        var to = (record.data.EmailTo == null ? \'\' : record.data.EmailTo).spl" +
"it(re);\r\n        var cc = (record.data.EmailCc == null ? \'\' : record.data.EmailC" +
"c).split(re);\r\n        storeEMailTo.removeAll();\r\n        storeEMailCc.removeAll" +
"();\r\n        storeEMail.each(function (r, i) {\r\n          storeEMailTo.add({ id:" +
" r.data.id, name: r.data.name, email: r.data.email, ui: Ext.Array.contains(to, r" +
".data.email) });\r\n          storeEMailCc.add({ id: r.data.id, name: r.data.name," +
" email: r.data.email, ui: Ext.Array.contains(cc, r.data.email) });\r\n        });\r" +
"\n        this.down(\'#gTo\').reconfigure(storeEMailTo);\r\n        this.down(\'#gCc\')" +
".reconfigure(storeEMailCc);\r\n        this.down(\'tabpanel\').setActiveTab(0);\r\n   " +
"   },\r\n\r\n      onSave: function () {\r\n        var active = this.activeRecord, fo" +
"rm = this.down(\'form\').getForm();\r\n        if (!active) {\r\n          return;\r\n  " +
"      }\r\n        var s = \'\', f = true;\r\n        storeEMailTo.each(function (r, i" +
") {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', \' : \'\') + r.data.emai" +
"l;\r\n            if (f) f = false;\r\n          }\r\n        });\r\n        this.down(\'" +
"#EmailTo\').setValue(s);\r\n        s = \'\';\r\n        f = true;\r\n        storeEMailC" +
"c.each(function (r, i) {\r\n          if (r.data.ui) {\r\n            s += (!f ? \', " +
"\' : \'\') + r.data.email;\r\n            if (f) f = false;\r\n          }\r\n        });" +
"\r\n        this.down(\'#EmailCc\').setValue(s);\r\n        if (form.isValid()) {\r\n   " +
"       if (this.title == \'Добавить\')\r\n            this.fireEvent(\'create\', this," +
" form.getValues(false, false, false, true));\r\n          else {\r\n            form" +
".updateRecord(active);\r\n            this.fireEvent(\'update\');\r\n          }\r\n    " +
"      this.hide();\r\n        }\r\n      },\r\n\r\n      onCancel: function () {\r\n      " +
"  this.hide();\r\n      }\r\n    });\r\n\r\n    var filters = {\r\n      ftype: \'filters\'," +
"\r\n      encode: true,\r\n      local: true,\r\n      autoReload: false,\r\n      menuF" +
"ilterText: \'Фильтр\'\r\n    };\r\n\r\n    Ext.define(\'RiskMap.Grid\', {\r\n      extend: \'" +
"Ext.grid.Panel\',\r\n      alias: \'widget.riskmapgrid\',\r\n      initComponent: funct" +
"ion () {\r\n        Ext.apply(this, {\r\n          wini: null,\r\n          defaultTyp" +
"e: \'textfield\',\r\n          invalidateScrollerOnRefresh: false,\r\n          layout" +
"Config: { labelSeparator: \'\' },\r\n          viewConfig: {\r\n            enableText" +
"Selection: true,\r\n            getRowClass: function (record) {\r\n              if" +
" (!record.get(\'IsEnabled\'))\r\n                return \'gray-row\';\r\n            }\r\n" +
"          },\r\n          features: [filters],\r\n          columns: [{\r\n           " +
" header: \'Юр. лицо\',\r\n            dataIndex: \'JurPersonne\',\r\n            width: " +
"60,\r\n            //flex: 1,\r\n            tdCls: \'wrap-text\',\r\n            filter" +
": {\r\n              type: \'list\'\r\n            }\r\n          }, {\r\n            head" +
"er: \'Структурное подразделение\',\r\n            dataIndex: \'Dep\',\r\n            wid" +
"th: 60,\r\n            tdCls: \'wrap-text\',\r\n            filter: {\r\n              t" +
"ype: \'list\'\r\n            }\r\n          }, {\r\n            header: \'Бизнес процесс\'" +
",\r\n            dataIndex: \'BisProc\',\r\n            width: 80,\r\n            tdCls:" +
" \'wrap-text\',\r\n            filter: {\r\n              type: \'list\'\r\n            }\r" +
"\n          }, {\r\n            header: \'№ Риск\',\r\n            dataIndex: \'NumRisk\'" +
",\r\n            width: 30,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n     " +
"       header: \'Риск наименование\',\r\n            dataIndex: \'RiskName\',\r\n       " +
"     width: 200,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            he" +
"ader: \'Влияние\',\r\n            dataIndex: \'InfluenceName\',\r\n            width: 80" +
",\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Вероятно" +
"сть\',\r\n            dataIndex: \'ProbabiliteName\',\r\n            width: 80,\r\n      " +
"      tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Сила контроля\',\r\n" +
"            dataIndex: \'ControlForceName\',\r\n            width: 80,\r\n            " +
"tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Итоговая оценка\',\r\n    " +
"        dataIndex: \'TotalName\',\r\n            width: 80,\r\n            tdCls: \'wra" +
"p-text\'\r\n          }, {\r\n            header: \'Существенный риск\',\r\n            d" +
"ataIndex: \'EssentielRisk\',\r\n            width: 40,\r\n            xtype: \'checkcol" +
"umn\',\r\n            tdCls: \'wrap-text\',\r\n            listeners: {\r\n              " +
"beforecheckchange: function (e) {\r\n                return false;\r\n              " +
"}\r\n            }\r\n          }, {\r\n            header: \'Цель\',\r\n            dataI" +
"ndex: \'But\',\r\n            width: 150,\r\n            tdCls: \'wrap-text\'\r\n         " +
" }, {\r\n            header: \'Владелец Цели\',\r\n            dataIndex: \'PossesseurB" +
"ut\',\r\n            width: 90,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n  " +
"          header: \'Контроль\',\r\n            dataIndex: \'Control\',\r\n            wi" +
"dth: 200,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'" +
"Владелец контроля\',\r\n            dataIndex: \'PossesseurControl\',\r\n            wi" +
"dth: 90,\r\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'С" +
"писок получателей\',\r\n            dataIndex: \'EmailTo\',\r\n            width: 140,\r" +
"\n            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Список пол" +
"учателей в копии\',\r\n            dataIndex: \'EmailCc\',\r\n            width: 140,\r\n" +
"            tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'id\',\r\n     " +
"       dataIndex: \'id\',\r\n            width: 30,\r\n            hidden: true\r\n     " +
"     }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r\n            " +
"dock: \'top\',\r\n            items: [{\r\n              iconCls: \'icon-add\',\r\n       " +
"       text: \'Добавить\',\r\n              scope: this,\r\n              handler: thi" +
"s.onAddClick\r\n            }, {\r\n              text: \'Изменить\',\r\n              d" +
"isabled: true,\r\n              itemId: \'change\',\r\n              scope: this,\r\n   " +
"           handler: this.onChangeClick\r\n            }, {\r\n              iconCls:" +
" \'icon-refresh\',\r\n              text: \'Обновить\',\r\n              scope: this,\r\n " +
"             handler: this.onRefreshClick\r\n            }, {\r\n              iconC" +
"ls: \'icon-delete\',\r\n              text: \'Удалить\',\r\n              disabled: true" +
",\r\n              itemId: \'delete\',\r\n              scope: this,\r\n              ha" +
"ndler: this.onDeleteClick\r\n            }, {\r\n              xtype: \'exporterbutto" +
"n\',\r\n              text: \'Экспорт\',\r\n              action: \'");

            
            #line 3315 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'RiskMap.xml'
            }, {
              text: 'Отправить',
              itemId: 'sendEmail',
              disabled: true,
              scope: this,
              handler: this.onSendEmailClick
            }, {
              text: 'Очистить фильтр',
              itemId: 'clearFilter',
              scope: this,
              handler: this.onClearFilterClick
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
        this.store.on('load', function () {
          this.filters.createFilters();
        }, this);

      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 3343 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("riskMapCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            params: {\r\n              id: [this.g" +
"etView().getSelectionModel().getSelection()[0].data.id]\r\n            },\r\n       " +
"     success: function (response) {\r\n              var text = response.responseT" +
"ext;\r\n              alert(\'Выполнено.\');\r\n            },\r\n            failure: f" +
"unction (response) {\r\n              var text = response.responseText;\r\n         " +
"     alert(\'Ошибка!\');\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n   " +
"   onRefreshClick: function () {\r\n        this.store.load();\r\n        var o = th" +
"is.up(\'panel\').down(\'#horraire\');\r\n        if (o) o.down(\'#create\').setDisabled(" +
"true);\r\n      },\r\n\r\n      onCreateWin: function () {\r\n        this.wini = Ext.cr" +
"eate(\'RiskMap.Win\', {\r\n          scope: this,\r\n          listeners: {\r\n         " +
"   scope: this,\r\n            create: function (form, data) {\r\n              this" +
".store.insert(0, data);\r\n              this.store.sync();\r\n            },\r\n     " +
"       update: function () {\r\n              this.store.sync();\r\n            }\r\n " +
"         }\r\n        });\r\n      },\r\n\r\n      onAddClick: function () {\r\n        va" +
"r rec = new RiskMap();\r\n        if (!this.wini) {\r\n          this.onCreateWin();" +
"\r\n        }\r\n        this.wini.setTitle(\'Добавить\');\r\n        this.wini.setActiv" +
"eRecord(rec);\r\n        this.wini.show(this);\r\n      },\r\n\r\n      onChangeClick: f" +
"unction () {\r\n        if (!this.wini) {\r\n          this.onCreateWin();\r\n        " +
"}\r\n        this.wini.setTitle(\'Изменить\');\r\n        this.wini.setActiveRecord(th" +
"is.getSelectionModel().getSelection()[0]);\r\n        this.wini.show(this);\r\n     " +
" },\r\n\r\n      onSelectChange: function (selModel, selections) {\r\n        this.dow" +
"n(\'#delete\').setDisabled(selections.length === 0);\r\n        this.down(\'#change\')" +
".setDisabled(selections.length === 0);\r\n        this.down(\'#sendEmail\').setDisab" +
"led(selections.length === 0);\r\n        var grid = this.up(\'panel\').down(\'#horrai" +
"re\');\r\n        if (grid) {\r\n          if (selections.length === 0)\r\n            " +
"grid.down(\'#create\').setDisabled(true);\r\n          else {\r\n            grid.stor" +
"e.proxy.extraParams = { id: this.getView().getSelectionModel().getSelection()[0]" +
".data.id };\r\n            grid.store.load();\r\n            grid.down(\'#create\').se" +
"tDisabled(false);\r\n          }\r\n        }\r\n      },\r\n\r\n      onRowDblClick: func" +
"tion () {\r\n        this.onChangeClick();\r\n      },\r\n\r\n      onSync: function () " +
"{\r\n        this.store.sync();\r\n      },\r\n\r\n      onDeleteClick: function () {\r\n " +
"       var selection = this.getView().getSelectionModel().getSelection()[0];\r\n  " +
"      if (selection) {\r\n          if (window.confirm(\'Удалить стр.?\')) {\r\n      " +
"      this.store.remove(selection);\r\n            this.onSync();\r\n          }\r\n  " +
"      }\r\n      },\r\n\r\n      onClearFilterClick: function () {\r\n        this.filte" +
"rs.clearFilters();\r\n      }\r\n    });\r\n\r\n    Ext.define(\'CbModel\', {\r\n      exten" +
"d: \'Ext.data.Model\',\r\n      idProperty: \'id\',\r\n      fields: [\'id\', \'name\']\r\n   " +
" });\r\n\r\n    Ext.create(\'Ext.data.Store\', {\r\n      autoLoad: true,\r\n      remoteS" +
"ort: true,\r\n      storeId: \'storeKV\',\r\n      model: \'CbModel\',\r\n      proxy: {\r\n" +
"        type: \'ajax\',\r\n        actionMethods: { read: \'POST\' },\r\n        url: \'");

            
            #line 3454 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("GetObjClsByParent"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '/6261',
        reader: {
          type: 'json',
          root: 'data'
        }
      }
    });

    Ext.create('Ext.data.Store', {
      autoLoad: true,
      remoteSort: true,
      storeId: 'storeMR',
      model: 'CbModel',
      proxy: {
        type: 'ajax',
        actionMethods: { read: 'POST' },
        url: '");

            
            #line 3470 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("GetObjClsByParent"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '/6255',
        reader: {
          type: 'json',
          root: 'data'
        }
      }
    });

    Ext.create('Ext.data.Store', {
      autoLoad: true,
      remoteSort: true,
      storeId: 'storePR',
      model: 'CbModel',
      proxy: {
        type: 'ajax',
        actionMethods: { read: 'POST' },
        url: '");

            
            #line 3486 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("GetObjClsByParent"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '/6250',
        reader: {
          type: 'json',
          root: 'data'
        }
      }
    });

    Ext.define('DeclViol', {
      extend: 'Ext.data.Model',
      pageSize: 500,
      remoteSort: true,
      autoSync: false,
      autoLoad: false,
      idProperty: 'id',
      fields: ['ID', { name: 'DDate', type: 'date', dateFormat: ""c"" }, 'FinInstID', 'InvestDeclID', 'InvestDeclWhereID', 'FLAG_Group', 'IssuerID', 'MinValue', 'MaxValue', 'Value', 'Descr', 'Reason', 'MethodRemoval', 'PeriodRemoval', 'KindViolation', 'LastValue', { name: 'EndDate', type: 'date', dateFormat: ""c"" }, { name: 'TermDate', type: 'date', dateFormat: ""c"" }, 'kvName', 'mrName', 'prName', 'fiBrief', 'fisBrief', 'NameWhere', 'ocName'],
      proxy: {
        type: 'ajax',
        api: {
          read: '");

            
            #line 3505 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
            Write(Url.Action("getDeclViolList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          create: \'");

            
            #line 3506 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("addDeclViol"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          update: \'");

            
            #line 3507 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
              Write(Url.Action("updDeclViol"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n          destroy: \'");

            
            #line 3508 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
               Write(Url.Action("delDeclViol"));

            
            #line default
            #line hidden
WriteLiteral(@"'
        },
        actionMethods: { read: 'POST' },
        reader: {
          type: 'json',
          root: 'data',
          totalProperty: 'totalCount'
        },
        writer: {
          type: 'json',
          root: 'data',
          writeAllFields: true,
          allowSingle: false,
          encode: false
        },
        simpleSortMode: true
      }
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeDeclViol',
      model: 'DeclViol'
    });

    Ext.create('Ext.data.Store', {
      storeId: 'storeGetTermDate',
      autoLoad: false,
      fields: [{ name: 'TermDate', type: 'date', dateFormat: ""c"" }],
      proxy: {
        type: 'ajax',
        url: '");

            
            #line 3538 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
         Write(Url.Action("GetTermDate"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        actionMethods: { read: \'POST\' },\r\n        reader: {\r\n          type: " +
"\'json\',\r\n          root: \'data\'\r\n        },\r\n        simpleSortMode: true\r\n     " +
" }\r\n    });\r\n\r\n    Ext.define(\'DeclViol.Win\', {\r\n      extend: \'Ext.window.Windo" +
"w\',\r\n      alias: \'widget.declviolwin\',\r\n\r\n      initComponent: function () {\r\n " +
"       this.addEvents(\'create\');\r\n        this.addEvents(\'update\');\r\n        Ext" +
".apply(this, {\r\n          width: 700,\r\n          closeAction: \'hide\',\r\n         " +
" layout: \'fit\',\r\n          modal: true,\r\n          buttonAlign: \'center\',\r\n     " +
"     items: [{\r\n            xtype: \'tabpanel\',\r\n            itemId: \'tp\',\r\n     " +
"       anchor: \'100%\',\r\n            border: false,\r\n            //height: 530,\r\n" +
"            maxHeight: 1000,\r\n            border: false,\r\n            items: [{\r" +
"\n              xtype: \'form\',\r\n              tag: 0,\r\n              title: \'Пара" +
"метры\',\r\n              bodyPadding: 10,\r\n              activeRecord: null,\r\n    " +
"          border: false,\r\n              defaultType: \'textfield\',\r\n             " +
" defaults: { anchor: \'100%\' },\r\n\r\n              fieldDefaults: {\r\n              " +
"  labelAlign: \'right\',\r\n                msgTarget: \'side\',\r\n                labe" +
"lWidth: 190\r\n              },\r\n              items: [{\r\n                itemId: " +
"\'DDate\',\r\n                xtype: \'datefield\',\r\n                name: \'DDate\',\r\n " +
"               fieldLabel: \'Дата возникновения нарушения\',\r\n                anch" +
"or: \'50%\',\r\n                startDay: 1,\r\n                allowBlank: false,\r\n  " +
"              format: \'d.m.Y\'\r\n              }, {\r\n                xtype: \'combo" +
"\',\r\n                itemId: \'FinInstID\',\r\n                fieldLabel: \'Портфель\'" +
",\r\n                store: Ext.create(\'Ext.data.Store\', {\r\n                  idPr" +
"operty: \'id\',\r\n                  fields: [\'id\', \'name\', \'brief\'],\r\n             " +
"     proxy: {\r\n                    type: \'ajax\',\r\n                    actionMeth" +
"ods: { read: \'POST\' },\r\n                    url: \'");

            
            #line 3603 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                     Write(Url.Action("GetFI"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    reader: {\r\n                      type: \'json\',\r\n         " +
"             root: \'data\'\r\n                    }\r\n                  }\r\n         " +
"       }),\r\n                valueField: \'id\',\r\n                name: \'FinInstID\'" +
",\r\n                displayField: \'brief\',\r\n                typeAhead: false,\r\n  " +
"              queryDelay: 1000,\r\n                width: 570,\r\n                hi" +
"deTrigger: true,\r\n                forceSelection: true,\r\n                anchor:" +
" \'100%\',\r\n                minChars: 2,\r\n                listConfig: {\r\n         " +
"         getInnerTpl: function () {\r\n                    return \'<div class=\"sea" +
"rch-item\"><strong>{brief}</strong><br>{name}</div>\';\r\n                  }\r\n     " +
"           },\r\n                allowBlank: false,\r\n                listeners: {\r" +
"\n                  select: function (combo, record, index) {\r\n                  " +
"  var store = this.ownerCt.getComponent(\'InvestDeclID\').store;\r\n                " +
"    store.proxy.extraParams = { id: this.getValue() };\r\n                    stor" +
"e.load();\r\n                    this.ownerCt.getComponent(\'InvestDeclWhereID\').st" +
"ore.removeAll();\r\n                    this.ownerCt.getComponent(\'InvestDeclWhere" +
"ID\').clearValue();\r\n                  }\r\n                }\r\n              }, {\r\n" +
"                itemId: \'InvestDeclID\',\r\n                xtype: \'combo\',\r\n      " +
"          store: Ext.create(\'Ext.data.Store\', {\r\n                  autoLoad: fal" +
"se,\r\n                  idProperty: \'InvestDeclID\',\r\n                  fields: [\'" +
"InvestDeclID\', \'Name\'],\r\n                  proxy: {\r\n                    type: \'" +
"ajax\',\r\n                    actionMethods: { read: \'POST\' },\r\n                  " +
"  url: \'");

            
            #line 3645 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                     Write(Url.Action("GetDeclByInstID"));

            
            #line default
            #line hidden
WriteLiteral(@"',
                    reader: {
                      type: 'json',
                      root: 'data'
                    }
                  }
                }),
                displayField: 'Name',
                valueField: 'InvestDeclID',
                typeAhead: false,
                queryMode: 'local',
                fieldLabel: 'Декларация',
                forceSelection: true,
                triggerAction: 'all',
                selectOnFocus: true,
                width: 135,
                name: 'InvestDeclID',
                emptyText: '*',
                submitValue: false,
                listeners: {
                  select: function (combo, record, index) {
                    var store = this.ownerCt.getComponent('InvestDeclWhereID').store;
                    store.load({ params: { id: this.getValue() } });
                  }
                }
              }, {
                itemId: 'InvestDeclWhereID',
                xtype: 'combo',
                store: Ext.create('Ext.data.Store', {
                  autoLoad: false,
                  idProperty: 'id',
                  fields: ['id', 'Name', 'StartValue', 'StopValue', 'FLAG_Group'],
                  proxy: {
                    type: 'ajax',
                    actionMethods: { read: 'POST' },
                    url: '");

            
            #line 3680 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                     Write(Url.Action("GetDeclWhereByDeclID"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    reader: {\r\n                      type: \'json\',\r\n         " +
"             root: \'data\'\r\n                    }\r\n                  }\r\n         " +
"       }),\r\n                displayField: \'Name\',\r\n                emptyText: \'*" +
"\',\r\n                valueField: \'id\',\r\n                typeAhead: false,\r\n      " +
"          queryMode: \'local\',\r\n                fieldLabel: \'Условие декларации\'," +
"\r\n                forceSelection: true,\r\n                triggerAction: \'all\',\r\n" +
"                selectOnFocus: true,\r\n                width: 135,\r\n             " +
"   name: \'InvestDeclWhereID\',\r\n                allowBlank: true,\r\n              " +
"  listeners: {\r\n                  select: function (combo, record, index) {\r\n   " +
"                 var me = this;\r\n                    me.ownerCt.getComponent(\'Ma" +
"xValue\').setValue(record[0].data.StopValue);\r\n                    var c = me.own" +
"erCt.getComponent(\'IssuerID\');\r\n                    if (record[0].data.FLAG_Grou" +
"p == 4 || record[0].data.FLAG_Group == 18) {\r\n                      c.store.load" +
"({ params: { id: me.ownerCt.getComponent(\'FinInstID\').getValue(), d: me.ownerCt." +
"getComponent(\'DDate\').getValue() } });\r\n                      c.setDisabled(fals" +
"e);\r\n                    }\r\n                    else {\r\n                      c." +
"clearValue();\r\n                      c.store.removeAll();\r\n                     " +
" c.setDisabled(true);\r\n                    }\r\n                  }\r\n             " +
"   }\r\n              }, {\r\n                itemId: \'IssuerID\',\r\n                x" +
"type: \'combo\',\r\n                store: Ext.create(\'Ext.data.Store\', {\r\n         " +
"         autoLoad: false,\r\n                  idProperty: \'id\',\r\n                " +
"  fields: [\'id\', \'name\'],\r\n                  proxy: {\r\n                    type:" +
" \'ajax\',\r\n                    actionMethods: { read: \'POST\' },\r\n                " +
"    url: \'");

            
            #line 3725 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                     Write(Url.Action("GetIssuers"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    reader: {\r\n                      type: \'json\',\r\n         " +
"             root: \'data\'\r\n                    }\r\n                  }\r\n         " +
"       }),\r\n                displayField: \'name\',\r\n                emptyText: \'*" +
"\',\r\n                valueField: \'id\',\r\n                typeAhead: false,\r\n      " +
"          queryMode: \'local\',\r\n                fieldLabel: \'Эмитент\',\r\n         " +
"       forceSelection: true,\r\n                triggerAction: \'all\',\r\n           " +
"     selectOnFocus: true,\r\n                width: 135,\r\n                name: \'I" +
"ssuerID\',\r\n                allowBlank: true,\r\n                listeners: {\r\n    " +
"            }\r\n              }, {\r\n                name: \'Descr\',\r\n             " +
"   fieldLabel: \'Описание нарушения\'\r\n              }, {\r\n                xtype: " +
"\'customnumber\',\r\n                itemId: \'MaxValue\',\r\n                name: \'Max" +
"Value\',\r\n                fieldLabel: \'Предельное значение\',\r\n                all" +
"owDecimals: true,\r\n                decimalPrecision: 2,\r\n                anchor:" +
" \'50%\',\r\n                hideTrigger: true,\r\n                keyNavEnabled: fals" +
"e,\r\n                mouseWheelEnabled: false,\r\n                autoStripChars: t" +
"rue\r\n              }, {\r\n                xtype: \'customnumber\',\r\n               " +
" name: \'Value\',\r\n                fieldLabel: \'Фактическое значение\',\r\n          " +
"      allowDecimals: true,\r\n                decimalPrecision: 2,\r\n              " +
"  anchor: \'50%\',\r\n                hideTrigger: true,\r\n                keyNavEnab" +
"led: false,\r\n                mouseWheelEnabled: false,\r\n                autoStri" +
"pChars: true\r\n              }, {\r\n                name: \'Reason\',\r\n             " +
"   fieldLabel: \'Причина возникновения нарушения\'\r\n              }, {\r\n          " +
"      xtype: \'combo\',\r\n                fieldLabel: \'Способ устранения\',\r\n       " +
"         store: \'storeMR\',\r\n                displayField: \'name\',\r\n             " +
"   emptyText: \'*\',\r\n                valueField: \'id\',\r\n                typeAhead" +
": true,\r\n                queryMode: \'local\',\r\n                selectOnFocus: tru" +
"e,\r\n                name: \'MethodRemoval\'\r\n              }, {\r\n                i" +
"temId: \'PeriodRemoval\',\r\n                xtype: \'combo\',\r\n                fieldL" +
"abel: \'Срок на устранение\',\r\n                store: \'storePR\',\r\n                " +
"displayField: \'name\',\r\n                emptyText: \'*\',\r\n                valueFie" +
"ld: \'id\',\r\n                typeAhead: true,\r\n                queryMode: \'local\'," +
"\r\n                selectOnFocus: true,\r\n                name: \'PeriodRemoval\',\r\n" +
"                listeners: {\r\n                  select: function (combo, record," +
" index) {\r\n                    var me = this;\r\n                    Ext.Ajax.requ" +
"est({\r\n                      url: \'");

            
            #line 3802 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                       Write(Url.Action("GetTermDate"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                      timeout: 60000,\r\n                      params: {\r\n     " +
"                   d: me.down(\'#DDate\').value, prid: me.down(\'#PeriodRemoval\').v" +
"alue\r\n                      },\r\n                      success: function (respons" +
"e) {\r\n                        me.down(\'#TermDate\').setValue(Ext.decode(response." +
"responseText).success);\r\n                      },\r\n                      failure" +
": function (response) {\r\n                        var text = response.responseTex" +
"t;\r\n                        alert(\'Ошибка!\');\r\n                      }\r\n        " +
"            });\r\n\r\n\r\n                    //var store = Ext.StoreManager.lookup(\'" +
"storeGetTermDate\');\r\n                    //store.on(\'load\', function (r) {\r\n    " +
"                //  me.down(\'#TermDate\').setValue();\r\n                    //  st" +
"ore.un(\'load\', l);\r\n                    //});\r\n                    //store.load(" +
"{params: { d: me.down(\'#DDate\').value, prid: me.down(\'#PeriodRemoval\').value}});" +
"\r\n                  },\r\n                  scope: this\r\n                }\r\n      " +
"        }, {\r\n                itemId: \'TermDate\',\r\n                xtype: \'datef" +
"ield\',\r\n                name: \'TermDate\',\r\n                fieldLabel: \'Устранит" +
"ь до\',\r\n                anchor: \'50%\',\r\n                startDay: 1,\r\n          " +
"      format: \'d.m.Y\'\r\n              }, {\r\n                xtype: \'datefield\',\r\n" +
"                name: \'EndDate\',\r\n                fieldLabel: \'Дата устранения\'," +
"\r\n                anchor: \'50%\',\r\n                startDay: 1,\r\n                " +
"format: \'d.m.Y\'\r\n              }, {\r\n                xtype: \'combo\',\r\n          " +
"      fieldLabel: \'Вид нарушений\',\r\n                store: \'storeKV\',\r\n         " +
"       displayField: \'name\',\r\n                emptyText: \'*\',\r\n                v" +
"alueField: \'id\',\r\n                typeAhead: true,\r\n                queryMode: \'" +
"local\',\r\n                selectOnFocus: true,\r\n                name: \'KindViolat" +
"ion\'\r\n              }]\r\n            }, {\r\n              tag: 1,\r\n              t" +
"itle: \'Адресаты\',\r\n              layout: \'anchor\',\r\n              defaults: { an" +
"chor: \'100%\' },\r\n              border: false,\r\n              items: []\r\n        " +
"    }]\r\n          }],\r\n          dockedItems: [{\r\n            xtype: \'toolbar\',\r" +
"\n            dock: \'bottom\',\r\n            ui: \'footer\',\r\n            items: [\'->" +
"\', {\r\n              iconCls: \'icon-save\',\r\n              itemId: \'save\',\r\n      " +
"        text: \'Сохранить\',\r\n              disabled: true,\r\n              scope: " +
"this,\r\n              handler: this.onSave\r\n            }, {\r\n              //ico" +
"nCls: \'icon-cancel\',\r\n              text: \'Отмена\',\r\n              scope: this,\r" +
"\n              handler: this.onCancel\r\n            }]\r\n          }]\r\n        });" +
"\r\n        this.callParent();\r\n      },\r\n\r\n      setActiveRecord: function (recor" +
"d) {\r\n        var me = this;\r\n        me.activeRecord = record;\r\n        if (rec" +
"ord) {\r\n          me.down(\'#save\').enable();\r\n\r\n          if (record.data.Invest" +
"DeclWhereID) {\r\n            me.down(\'#InvestDeclWhereID\').store.load({ params: {" +
" wid: record.data.InvestDeclWhereID } });\r\n          }\r\n          else {\r\n      " +
"      me.down(\'#InvestDeclID\').clearValue();\r\n            me.down(\'#InvestDeclWh" +
"ereID\').store.removeAll();\r\n          }\r\n\r\n          if (record.data.FinInstID) " +
"{\r\n            me.down(\'#FinInstID\').store.load({ params: { id: record.data.FinI" +
"nstID } });\r\n            me.down(\'#InvestDeclID\').store.load({ params: { id: rec" +
"ord.data.FinInstID } });\r\n            if (record.data.FLAG_Group == 4 || record." +
"data.FLAG_Group == 18) {\r\n              me.down(\'#IssuerID\').store.load({ params" +
": { id: record.data.FinInstID, d: record.data.DDate } });\r\n              me.down" +
"(\'#IssuerID\').setDisabled(false);\r\n            }\r\n            else {\r\n          " +
"    me.down(\'#IssuerID\').clearValue();\r\n              me.down(\'#IssuerID\').setDi" +
"sabled(true);\r\n            }\r\n          }\r\n          else {\r\n            me.down" +
"(\'#FinInstID\').clearValue();\r\n            me.down(\'#InvestDeclID\').store.removeA" +
"ll();\r\n          }\r\n\r\n          me.down(\'form\').getForm().loadRecord(record);\r\n " +
"       } else {\r\n          me.down(\'#save\').disable();\r\n          me.down(\'form\'" +
").getForm().reset();\r\n        }\r\n        me.down(\'tabpanel\').setActiveTab(0);\r\n " +
"     },\r\n\r\n      onSave: function () {\r\n        var active = this.activeRecord, " +
"form = this.down(\'form\').getForm();\r\n        if (!active) {\r\n          return;\r\n" +
"        }\r\n        if (form.isValid()) {\r\n          if (this.title == \'Добавить\'" +
")\r\n            this.fireEvent(\'create\', this, form.getValues(false, false, false" +
", true));\r\n          else {\r\n            form.updateRecord(active);\r\n           " +
" this.fireEvent(\'update\');\r\n          }\r\n          this.hide();\r\n        }\r\n    " +
"  },\r\n\r\n      onCancel: function () {\r\n        this.hide();\r\n      }\r\n    });\r\n\r" +
"\n    Ext.define(\'DeclViol.Grid\', {\r\n      extend: \'Ext.grid.Panel\',\r\n      alias" +
": \'widget.declviolgrid\',\r\n      initComponent: function () {\r\n        Ext.apply(" +
"this, {\r\n          wini: null,\r\n          defaultType: \'textfield\',\r\n          i" +
"nvalidateScrollerOnRefresh: false,\r\n          layoutConfig: { labelSeparator: \'\'" +
" },\r\n          viewConfig: {\r\n            enableTextSelection: true,\r\n          " +
"  getRowClass: function (record) {\r\n              if (record.get(\'EndDate\') != n" +
"ull)\r\n                return \'gray-row\';\r\n            }\r\n          },\r\n         " +
" features: [filters],\r\n          columns: [{\r\n            header: \'Тип клиента\'," +
"\r\n            dataIndex: \'ocName\',\r\n            width: 90,\r\n            tdCls: \'" +
"wrap-text\',\r\n            filter: {\r\n              type: \'list\'\r\n            }\r\n " +
"         }, {\r\n            header: \'Название портфеля\',\r\n            dataIndex: " +
"\'fiBrief\',\r\n            width: 120,\r\n            tdCls: \'wrap-text\',\r\n          " +
"  filter: {\r\n              type: \'list\'\r\n            }\r\n          }, {\r\n        " +
"    header: \'Дата возникновения нарушения\',\r\n            xtype: \'datecolumn\',\r\n " +
"           format: \'d.m.Y\',\r\n            dataIndex: \'DDate\',\r\n            width:" +
" 80\r\n          }, {\r\n            header: \'Условие декларации\',\r\n            data" +
"Index: \'NameWhere\',\r\n            width: 150,\r\n            tdCls: \'wrap-text\',\r\n " +
"           filter: {\r\n              type: \'list\'\r\n            }\r\n          }, {\r" +
"\n            header: \'Эмитент\',\r\n            dataIndex: \'fisBrief\',\r\n           " +
" width: 120,\r\n            tdCls: \'wrap-text\',\r\n            filter: {\r\n          " +
"    type: \'list\'\r\n            }\r\n          }, {\r\n            header: \'Описание н" +
"арушения\',\r\n            dataIndex: \'Descr\',\r\n            width: 200,\r\n          " +
"  tdCls: \'wrap-text\'\r\n          }, {\r\n            header: \'Предельное значение\'," +
"\r\n            dataIndex: \'MaxValue\',\r\n            width: 70,\r\n            tdCls:" +
" \'wrap-text\'\r\n          }, {\r\n            header: \'Фактическое значение\',\r\n     " +
"       dataIndex: \'Value\',\r\n            width: 70,\r\n            tdCls: \'wrap-tex" +
"t\'\r\n          }, {\r\n            header: \'Причина возникновения нарушения\',\r\n    " +
"        dataIndex: \'Reason\',\r\n            width: 200,\r\n            tdCls: \'wrap-" +
"text\'\r\n          }, {\r\n            header: \'Срок на устранение\',\r\n            da" +
"taIndex: \'prName\',\r\n            width: 80,\r\n            tdCls: \'wrap-text\'\r\n    " +
"      }, {\r\n            header: \'Устранить до\',\r\n            dataIndex: \'TermDat" +
"e\',\r\n            width: 80,\r\n            xtype: \'datecolumn\',\r\n            forma" +
"t: \'d.m.Y\'\r\n          }, {\r\n            header: \'Дата устранения\',\r\n            " +
"dataIndex: \'EndDate\',\r\n            width: 80,\r\n            xtype: \'datecolumn\',\r" +
"\n            format: \'d.m.Y\'\r\n          }, {\r\n            header: \'Способ устран" +
"ения\',\r\n            dataIndex: \'mrName\',\r\n            width: 150");

WriteLiteral("\r\n          }, {\r\n            header: \'Вид нарушений\',\r\n            dataIndex: \'k" +
"vName\',\r\n            width: 120,\r\n            tdCls: \'wrap-text\',\r\n            f" +
"ilter: {\r\n              type: \'list\'\r\n            }\r\n          }, {\r\n           " +
" header: \'id\',\r\n            dataIndex: \'ID\',\r\n            width: 30,\r\n          " +
"  hidden: true\r\n          }],\r\n          dockedItems: [{\r\n            xtype: \'to" +
"olbar\',\r\n            dock: \'top\',\r\n            items: [{\r\n              xtype: \'" +
"tbtext\', text: \' Период: \'\r\n            }, {\r\n              xtype: \'datefield\',\r" +
"\n              itemId: \'d1\',\r\n              allowBlank: false,\r\n              fo" +
"rmat: \'d.m.Y\',\r\n              vtype: \'daterange\',\r\n              endDateField: \'" +
"d2\',\r\n              startDay: 1,\r\n              value: Ext.Date.add(Ext.Date.cle" +
"arTime(new Date(), false), Ext.Date.DAY, -8),\r\n              width: 100,\r\n      " +
"        disabled: true\r\n            }, \' \', {\r\n              xtype: \'datefield\'," +
"\r\n              itemId: \'d2\',\r\n              allowBlank: false,\r\n              f" +
"ormat: \'d.m.Y\',\r\n              vtype: \'daterange\',\r\n              startDateField" +
": \'d1\',\r\n              startDay: 1,\r\n              value: Ext.Date.add(Ext.Date." +
"clearTime(new Date(), false), Ext.Date.DAY, 0),\r\n              width: 100,\r\n    " +
"          margin: \'0 5 0 0\',\r\n              disabled: true\r\n            }, \' Нез" +
"акрытые: \', {\r\n              xtype: \'checkbox\',\r\n              checked: true,\r\n " +
"             itemId: \'cbOpen\',\r\n              scope: this,\r\n              handle" +
"r: this.onOpenClick\r\n            }, {\r\n              iconCls: \'icon-refresh\',\r\n " +
"             text: \'Обновить\',\r\n              scope: this,\r\n              handle" +
"r: this.onRefreshClick\r\n            }, {\r\n              iconCls: \'icon-add\',\r\n  " +
"            text: \'Добавить\',\r\n              scope: this,\r\n              handler" +
": this.onAddClick\r\n            }, {\r\n              text: \'Изменить\',\r\n          " +
"    disabled: true,\r\n              itemId: \'change\',\r\n              scope: this," +
"\r\n              handler: this.onChangeClick\r\n            }, {\r\n              ico" +
"nCls: \'icon-delete\',\r\n              text: \'Удалить\',\r\n              disabled: tr" +
"ue,\r\n              itemId: \'delete\',\r\n              scope: this,\r\n              " +
"handler: this.onDeleteClick\r\n            }, {\r\n              xtype: \'exporterbut" +
"ton\',\r\n              text: \'Экспорт\',\r\n              action: \'");

            
            #line 4115 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
                  Write(Url.Action("ExportExcel", "Home", new { area = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"',
              file: 'DeclViol.xml'
            }, {
              text: 'Отправить',
              itemId: 'sendEmail',
              scope: this,
              handler: this.onSendEmailClick
            }, {
              text: 'Очистить фильтр',
              itemId: 'clearFilter',
              scope: this,
              handler: this.onClearFilterClick
            }]
          }]
        })
        this.callParent();
        this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
        this.on('itemdblclick', this.onRowDblClick, this);
        this.store.on('load', function () {
          this.filters.createFilters();
        }, this);

      },

      onSendEmailClick: function () {
        if (window.confirm('Отправить сообщение?')) {
          Ext.Ajax.request({
            url: '");

            
            #line 4142 "..\..\Areas\Code\Views\Envoi\Index.cshtml"
             Write(Url.Action("DeclViolCourriel"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            timeout: 60000,\r\n            success: function (response) {\r\n    " +
"          var text = response.responseText;\r\n              alert(\'Выполнено.\');\r" +
"\n            },\r\n            failure: function (response) {\r\n              var t" +
"ext = response.responseText;\r\n              alert(\'Ошибка!\');\r\n            }\r\n  " +
"        });\r\n        }\r\n      },\r\n\r\n      onOpenClick: function () {\r\n        va" +
"r me = this;\r\n        me.down(\'#d1\').setDisabled(me.down(\'#cbOpen\').checked);\r\n " +
"       me.down(\'#d2\').setDisabled(me.down(\'#cbOpen\').checked);\r\n      },\r\n\r\n    " +
"  onRefreshClick: function () {\r\n        var me = this;\r\n        me.store.proxy." +
"extraParams = { d1: me.down(\'#d1\').getValue(), d2: me.down(\'#d2\').getValue(), op" +
": me.down(\'#cbOpen\').checked };\r\n        me.store.load();\r\n      },\r\n\r\n      onS" +
"electChange: function (selModel, selections) {\r\n        this.down(\'#delete\').set" +
"Disabled(selections.length === 0);\r\n        this.down(\'#change\').setDisabled(sel" +
"ections.length === 0);\r\n        //this.down(\'#sendEmail\').setDisabled(selections" +
".length === 0);\r\n      },\r\n\r\n      onCreateWin: function () {\r\n        this.wini" +
" = Ext.create(\'DeclViol.Win\', {\r\n          scope: this,\r\n          listeners: {\r" +
"\n            scope: this,\r\n            create: function (form, data) {\r\n        " +
"      this.store.insert(0, data);\r\n              this.store.sync();\r\n           " +
" },\r\n            update: function () {\r\n              this.store.sync();\r\n      " +
"      }\r\n          }\r\n        });\r\n      },\r\n\r\n      onAddClick: function () {\r\n" +
"        var rec = new DeclViol({ DDate: Ext.Date.clearTime(new Date(), false), P" +
"eriodRemoval: 6251 });\r\n        if (!this.wini) {\r\n          this.onCreateWin();" +
"\r\n        }\r\n        this.wini.setTitle(\'Добавить\');\r\n        this.wini.setActiv" +
"eRecord(rec);\r\n        this.wini.show(this);\r\n      },\r\n\r\n      onChangeClick: f" +
"unction () {\r\n        if (!this.wini) {\r\n          this.onCreateWin();\r\n        " +
"}\r\n        this.wini.setTitle(\'Изменить\');\r\n        this.wini.setActiveRecord(th" +
"is.getSelectionModel().getSelection()[0]);\r\n        this.wini.show(this);\r\n     " +
" },\r\n\r\n      onRowDblClick: function () {\r\n        this.onChangeClick();\r\n      " +
"},\r\n\r\n      onSync: function () {\r\n        this.store.sync();\r\n      },\r\n\r\n     " +
" onDeleteClick: function () {\r\n        var selection = this.getView().getSelecti" +
"onModel().getSelection()[0];\r\n        if (selection) {\r\n          if (window.con" +
"firm(\'Удалить стр.?\')) {\r\n            this.store.remove(selection);\r\n           " +
" this.onSync();\r\n          }\r\n        }\r\n      },\r\n\r\n      onClearFilterClick: f" +
"unction () {\r\n        this.filters.clearFilters();\r\n      }\r\n\r\n    });\r\n\r\n    Ex" +
"t.onReady(function () {\r\n\r\n      Ext.tip.QuickTipManager.init();\r\n\r\n      Ext.cr" +
"eate(\'Ext.Viewport\', {\r\n        layout: \'border\',\r\n        items: [{\r\n          " +
"region: \'north\',\r\n          border: false,\r\n          contentEl: \'header\'\r\n     " +
"   }, {\r\n          id: \'tp\',\r\n          xtype: \'tabpanel\',\r\n          tabPositio" +
"n: \'top\',\r\n          region: \'center\',\r\n          activeTab: 0,\r\n          frame" +
": false,\r\n          items: [{\r\n            itemId: \'tcAuto\',\r\n            tag: 1" +
",\r\n            TypeID: 1,\r\n            title: \'Авто-рассылка\',\r\n            auto" +
"Scroll: true,\r\n            layout: \'border\',\r\n            items: [{\r\n           " +
"   region: \'center\',\r\n              itemId: \'grid\',\r\n              border: false" +
",\r\n              xtype: \'envoigrid\',\r\n              store: \'storea\'\r\n           " +
" }, {\r\n              region: \'south\',\r\n              height: \'20%\',\r\n           " +
"   itemId: \'horraire\',\r\n              border: false,\r\n              xtype: \'horr" +
"airegrid\',\r\n              store: \'storeEnvoiHoraire\',\r\n              split: true" +
"\r\n            }]\r\n          }, {\r\n            itemId: \'tcManuel\',\r\n            t" +
"ag: 0,\r\n            TypeID: 1,\r\n            title: \'Ручная рассылка\',\r\n         " +
"   autoScroll: true,\r\n            layout: \'border\',\r\n            items: [{\r\n    " +
"          region: \'center\',\r\n              itemId: \'grid\',\r\n              border" +
": false,\r\n              xtype: \'envoigrid\',\r\n              store: \'storem\'\r\n    " +
"        }]\r\n          }, {\r\n            itemId: \'tcJourEE\',\r\n            tag: 5," +
"\r\n            TypeID: 1,\r\n            title: \'Журнал ПО\',\r\n            autoScrol" +
"l: true,\r\n            layout: \'border\',\r\n            items: [{\r\n              re" +
"gion: \'center\',\r\n              itemId: \'grid\',\r\n              border: false,\r\n  " +
"            xtype: \'envoiexecgrid\',\r\n              store: \'storeEE\'\r\n           " +
" }]\r\n          }, {\r\n            itemId: \'tcEnvoiRi\',\r\n            tag: 0,\r\n    " +
"        TypeID: 2,\r\n            title: \'Раскрытие информации\',\r\n            auto" +
"Scroll: true,\r\n            layout: \'border\',\r\n            items: [{\r\n           " +
"   region: \'center\',\r\n              itemId: \'grid\',\r\n              border: false" +
",\r\n              xtype: \'envoirigrid\',\r\n              store: \'storeri\'\r\n        " +
"    }]\r\n          }, {\r\n            itemId: \'tcJourRi\',\r\n            tag: 5,\r\n  " +
"          TypeID: 2,\r\n            title: \'Журнал РИ\',\r\n            autoScroll: t" +
"rue,\r\n            layout: \'border\',\r\n            items: [{\r\n              region" +
": \'center\',\r\n              itemId: \'grid\',\r\n              border: false,\r\n      " +
"        xtype: \'envoiexecrigrid\',\r\n              store: \'storeeeri\'\r\n           " +
" }]\r\n          }, {\r\n            itemId: \'tcConseil\',\r\n            tag: 2,\r\n    " +
"        title: \'Рекомендации\',\r\n            autoScroll: true,\r\n            layou" +
"t: \'border\',\r\n            items: [{\r\n              region: \'center\',\r\n          " +
"    itemId: \'grid\',\r\n              border: false,\r\n              xtype: \'conseil" +
"grid\',\r\n              store: \'storeConseil\'\r\n            }, Ext.create(\'Horraire" +
".Grid\', {\r\n              region: \'south\',\r\n              height: \'20%\',\r\n       " +
"       itemId: \'horraire\',\r\n              border: false,\r\n              //xtype:" +
" \'horrairegrid\',\r\n              store: \'storeConseilHoraire\',\r\n              spl" +
"it: true\r\n            })]\r\n          }, {\r\n            itemId: \'tcRiskMap\',\r\n   " +
"         tag: 3,\r\n            title: \'Карта рисков\',\r\n            autoScroll: tr" +
"ue,\r\n            layout: \'border\',\r\n            items: [{\r\n              region:" +
" \'center\',\r\n              itemId: \'grid\',\r\n              border: false,\r\n       " +
"       xtype: \'riskmapgrid\',\r\n              store: \'storeRiskMap\'\r\n            }" +
", Ext.create(\'Horraire.Grid\', {\r\n              region: \'south\',\r\n              h" +
"eight: \'20%\',\r\n              itemId: \'horraire\',\r\n              border: false,\r\n" +
"              //xtype: \'horrairegrid\',\r\n              store: \'storeRiskMapHorair" +
"e\',\r\n              split: true\r\n            })]\r\n          }");

WriteLiteral("]\r\n        }]\r\n      });\r\n\r\n    });\r\n  </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
